{"version":3,"sources":["component/Dial/AutoHidden.js","redux/explorer/reducer.ts","utils/page.js","component/Placeholder/TextLoading.js","component/Navbar/DarkModeSwitcher.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/FileManager/Modals.js","middleware/Auth.ts","utils/index.js","component/Viewer/Text.js","component/Viewer/Code.js","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/FileManager/ImgPreview.js","loader/utils.js","loader/index.js","component/Upload/FileList.js","component/Dial/Create.js","component/Upload/Uploader.js","config.js","actions/explorer.js","actions/index.js","component/FileManager/TypeIcon.js","serviceWorker.js","middleware/AuthRoute.js","component/Share/NotFound.js","component/Placeholder/Captcha.js","middleware/Init.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","component/Common/ICPFooter.js","component/Login/LoginForm.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","redux/explorer/action.ts","redux/explorer/index.ts","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/Folder.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/FileManager/FileManager.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","App.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","redux/viewUpdate/action.ts","component/FileManager/PathSelector.js","middleware/Api.js"],"names":["AutoHidden","children","enable","useState","hidden","setHidden","prev","window","scrollY","lastUpdate","useEffect","addEventListener","e","currentTarget","handleNavigation","in","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selected","selectProps","isMultiple","withFolder","withFile","lastSelect","file","id","name","size","type","date","index","shiftSelectedIds","imgPreview","first","other","keywords","fileSave","checkSelectedProps","length","forEach","value","explorer","state","action","Object","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","includes","statusHelper","isHomePage","path","isSharePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","className","TextLoading","classes","icon","color","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","palette","dispatch","useDispatch","ToggleThemeMode","useCallback","toggleDaylightMode","isDayLight","isDark","title","placement","classNames","onClick","Auth","SetPreference","fab","margin","top","right","bottom","left","zIndex","badge","fabProgress","green","wrapper","spacing","buttonSuccess","backgroundColor","SaveButton","buttonClassname","clsx","status","disabled","aria-label","avatar","blue","loadingContainer","display","loading","marginTop","marginLeft","LoadingDialog","open","viewUpdate","modals","text","loadingText","Dialog","aria-labelledby","DialogContent","DialogContentText","CircularProgress","contentFix","buttonProgress","secondary","light","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","SetModalsLoading","setModalsLoading","RefreshFileList","refreshFileList","onClose","DialogTitle","PathSelector","presentPath","onSelect","folder","DialogActions","Button","preventDefault","dirs","items","push","API","post","src_dir","src","dst","then","catch","error","message","modalsLoading","widthAnimation","shareUrl","minWidth","flexCenter","alignItems","noFlex","scoreCalc","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","event","handleExpand","panel","isExpanded","handleCheck","setTimeout","maxWidth","fullWidth","Divider","List","onChange","aria-controls","ListItem","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","Math","random","toString","substr","slice","edge","onMouseDown","Visibility","VisibilityOff","labelWidth","style","marginRight","Select","labelId","MenuItem","Typography","TextField","onFocus","select","autoFocus","inputProps","readonly","label","submitFormBody","is_dir","response","data","DecompressDialog","filePath","CompressDialog","fileName","setFileName","map","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","downloaded","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","pathHelper","location","pathname","share","score","scoreHandler","archiveDownload","Download","getMultiLinks","modalsStatus","rename","getSource","get","url","dragMove","callback","reqURL","key","downloadPath","encodeURIComponent","put","Promise","resolve","reject","all","console","log","notDir","el","concat","resolve1","reject1","objs","objects","value1","obj","result","urls","join","finally","postBody","shareInfo","rawData","code","refreshStorage","submitRemove","delete","submitMove","patch","DragSelectedPath","closeAllModals","doMove","openLoadingDialog","submitRename","findIndex","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","tasks","split","savePath","res","reload","setMoveTarget","remoteDownloadNext","this","onSubmit","createNewFolder","createNewFile","copy","move","remove","music","controls","baseURL","remoteDownload","placeholder","multiline","rowsMin","torrentDownload","decompress","compress","rowsMax","Component","Modals","connect","navigator","withRouter","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","parse","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","signout","oldUser","preference","GetPreference","sizeToString","bytes","i","floor","pow","toFixed","fixUrlHash","setCookie","days","Date","setTime","getTime","document","cookie","setGetParameter","paramName","paramValue","href","indexOf","prefix","substring","suffix","history","pushState","allowSharePreview","allowPreview","userInfo","uid","checkGetParameters","field","changeThemeColor","querySelector","setAttribute","bufferDecode","Uint8Array","from","atob","c","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","hex2bin","hex","parseInt","padStart","pathJoin","parts","sep","separator","part","RegExp","basename","pathList","pop","transformTime","timestamp","time","y","getFullYear","M","getMonth","d","getDate","h","getHours","m","getMinutes","s","getSeconds","randomStr","characters","charactersLength","charAt","getNumber","base","conditions","v","isMac","platform","toUpperCase","vhCheck","vh","innerHeight","documentElement","setProperty","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","setLoading","math","useRouteMatch","$vm","createRef","useLocation","query","URLSearchParams","search","useParams","SetSubTitle","changeSubTitle","params","requestURL","responseType","textdata","Buffer","toBase64","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","a","current","$img2Url","elevation","ref","onSave","toolbar","h1","h2","h3","h4","img","link","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","useTheme","extension","codePreviewSuffix","Array","Set","keys","k","fallback","height","language","options","readOnly","extraEditorClassName","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","dark","amber","fontSize","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","setUserPopover","openURL","sigOut","setSessionStatus","user","Popover","anchorEl","transformOrigin","visitorMenu","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","group","UserAvatarPopover","userPopoverAnchorEl","anchor","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","main","handleDrawerToggle","mobileOpen","loadUploader","openPreview","isShare","shareDownload","changeContextMenu","previewPath","isPreviewable","showImgPreivew","openMusicDialog","openDownload","signOut","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","webdav","iOS","process","browser","test","userAgent","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","saveFile","allowArchiveDownload","navigateTo","openShareDialog","openRenameDialog","openMoveDialog","openRemoveDialog","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerOpen","drawerClose","Navbar","drawerToggleAction","openCreateFolderDialog","searchMyFile","withTheme","flexShrink","drawerDesktop","mixins","transition","transitions","create","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","minHeight","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","component","groupName","UserInfo","backgroundImage","backgroundSize","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","ImagPreviewComponent","photoIndex","isOpen","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","isFunction","val","noop","newScript","scriptElem","createElement","prototype","hasOwnProperty","call","body","appendChild","keyIterator","cols","next","parallel","each","hasError","successed","ret","task","err","args","series","thunk","nextKey","nextThunk","isArray","iterator","loadedScript","pendingScripts","failedScript","addCache","entry","removeFailedScript","script","node","parentNode","removeChild","uploaderLoader","WrappedComponent","ScriptLoader","context","isScriptLoaded","isScriptLoadSucceed","_isMounted","scripts","onComplete","loadNewScript","taskComplete","callbacks","startLoadingScripts","policyType","onScriptLoaded","defaultProps","hoistStatics","FileList","files","openFileList","cancelUpload","deQueue","addNewFile","getElementsByClassName","click","getProgressBackground","lighten","darken","filesNow","fileID","f","splice","errMsg","ignoreMsg","Slide","direction","inRef","bind","enQueue","setComplete","setError","fullScreen","isWidthDown","TransitionComponent","Transition","AppBar","Toolbar","flex","dialogContent","minHight","item","progressContainer","progress","progressContent","TypeIcon","isUpload","listAction","plupload","formatSize","speed","loaded","errorStatus","successStatus","progressBar","wordBreak","withWidth","UploadButton","setOpen","queued","setQueued","OpenNewFolderDialog","OpenNewFileDialog","openCreateFileDialog","Queued","openUpload","uploadButton","contains","uploadClicked","Badge","badgeContent","invisible","Backdrop","SpeedDial","ariaLabel","tooltipTitle","SpeedDialIcon","openIcon","FabProps","SpeedDialAction","tooltipOpen","UploaderComponent","fileAdd","currntPath","enqueFiles","isDsStore","removeFile","relativePath","pathCache","uploader","Qiniu","runtimes","browse_button","drop_element","max_file_size","policy","maxSize","dragdrop","chunk_size","getChunkSize","saveType","filters","mime_types","allowedType","extensions","multi_selection","uptoken_url","uptoken","domain","max_retries","get_new_uptoken","auto_start","log_level","init","FilesAdded","BeforeUpload","QueueChanged","UploadProgress","UploadComplete","Fresh","FileUploaded","Error","errTip","FilesRemoved","onError","setRef","Uploader","forwardRef","msDocPreviewSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","json","php","bat","cpp","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","xml","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","policyTypeMap","local","remote","qiniu","upyun","oss","cos","onedrive","s3","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","removeSelectedTargets","addSelectedTargets","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","getState","Boolean","isMacbook","begin","min","end","max","newShiftSelected","setLastSelect","setNavigator","navigatorLoading","navigateUp","pathSplit","newPath","dragAndDrop","changeViewMethod","method","menuType","setNavigatorLoadingStatus","setNavigatorError","setShareUserPopover","openResaveDialog","applyThemes","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","enableLoadUploader","setSiteConfig","config","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","fileSuffix","getColor","getColorValue","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","match","AuthRoute","rest","render","to","emptyContainer","emptyInfoBig","Notice","primaryColor","secondaryColor","x","rx","ry","captchaPlacholder","initUserConfig","undefined","themes","enableUploaderLoad","uploadConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","ReCAPTCHA","handleExpired","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","reset","onExpired","onErrored","token","sitekey","tabindex","stoken","hl","captcha","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","elem","childProps","displayName","makeAsyncScriptLoader","callbackName","globalName","icp","ICPFooter","siteICPId","show","setShow","pageHelper","Link","rel","flexDirection","form","submit","captchaContainer","captchaPlaceholder","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","setCaptcha","useAuthn","setUseAuthn","captchaData","setCaptchaData","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","useReCaptcha","captcha_IsUseReCaptcha","reCaptchaKey","captcha_ReCaptchaKey","ApplyThemes","SetSessionStatus","refreshCaptcha","afterLogin","removeItem","Paper","userName","Password","captchaCode","required","Input","autoComplete","alt","ReCaptcha","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","Fingerprint","VpnKey","SmallIconCompoment","isSelected","ButtonBase","focusRipple","notSelected","iconSelected","iconNotSelected","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","divider","boxSizing","fontWeight","FileIconCompoment","showPicIcon","pic","hide","picPreview","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","dragging","cardDragged","diliverIcon","object","viewMethod","Preview","explorerViewMethod","card","layerStyles","getItemStyles","initialOffset","currentOffset","isSnapToGrid","round","snapToGrid","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","isDragging","renderItem","setFileList","setDirList","setSortMethod","sortMethodFuncs","sizePos","b","sizeRes","namePos","localeCompare","languages","numeric","ignorePunctuation","nameRev","timePos","timeRev","updateFileList","sortMethod","sortFunc","sort","changeSortMethod","actions","reducers","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","openMultiLinks","enterFolder","clickUpload","Menu","menuOpen","anchorReference","anchorPosition","allowRemoteDownload","allowSource","Archive","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","TableRow","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","scope","tableRow","hideAuto","TableItem","userSelect","active","Folder","isActive","FolderDropWarpper","useDrop","accept","drop","collect","isOver","canDrop","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","ShowImgPreivew","OpenMusicDialog","DragAndDrop","OpenLoadingDialog","selectFileAction","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","ExplorerCompoment","ClickAway","dataset","clickaway","DELETE_FILE","SELECT_ALL","away","showView","listView","Table","table","TableHead","TableSortLabel","changeSort","visuallyHidden","TableBody","normalView","flexFix","data-clickAway","typeHeader","Grid","xs","md","sm","lg","view","rootTable","rootShare","navigatorError","errorBox","errorMsg","navigatorErrorMsg","emptyIcon","emptyInfoSmall","Explorer","drawerDesktopOpen","navigateToPath","hint","upButton","clickAway","clip","expandMore","textTransform","PathButton","inputRef","useRef","more","last","DropDownItem","setActiveStatus","DropDown","timer","clearTimeout","shouldClose","element","sortOptions","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","anchorSort","selectedIndex","URL","searchParams","renderPath","onpopstate","apiURL","parent","pathTemp","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","force","overflowInitLock","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","showHiddenPath","showSortOptions","performAction","newTarget","toggleViewMethod","newMethod","changeView","handleMenuItemClick","0","1","2","3","4","5","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","sideButton","option","creator","nick","Navigator","openResave","FileManager","DndProvider","backend","HTML5Backend","DragLayer","maxHeight","VideoViewer","getBaseURL","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","SearchResult","page","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","Card","CardHeader","subheader","datetime","create_date","locale","Pagination","count","ceil","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","CardActions","disableActionSpacing","MyShare","SelectFileDialog","setFiles","dividers","FormGroup","row","FormControlLabel","control","filesCopy","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","actionButton","infoTitle","infoValue","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","getContext","clearRect","strokeStyle","bit","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","mode","gid","indexes","newExpanded","CardContent","LinearProgress","completedLength","newIndex","newFiles","deleteFile","HighlightOff","infoHash","axios","update","uploadLength","uploadSpeed","numSeeders","seeder","pieceLength","FinishedCard","task_status","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","downloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","cursor","shareDes","Creator","userProfile","isFolder","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","DocViewer","setURL","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","account","ID","CreatedAt","created_at","Name","Root","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","origin","TableContainer","align","accountCopy","deleteAccount","footer","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","credential","attestationObject","add","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","settings","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","loadSetting","useGravatar","changeNick","uploadAvatar","formData","FormData","append","fileInput","headers","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","PDFViewer","resave","doNavigate","defaultStatus","rawStore","configCache","InitSiteConfig","QQLogin","black","contrastText","filename","bgSelected","ErrorBoundary","errorInfo","componentStack","Admin","hash","fetch","contentType","ready","unregister","checkValidServiceWorker","reduxEnhance","applyMiddleware","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","UpdateSiteConfig","ReactDOM","exact","themeConfig","prefersDarkMode","useMediaQuery","useMemo","prefer","createMuiTheme","Fragment","ThemeProvider","CssBaseline","Text","Code","getElementById","setSubtitle","PathSelectorCompoment","selectedTarget","toBeLoad","back","paths","api","unshift","handleSelect","selector","buttonIcon","iconWhite","instance","withCredentials","crossDomain","AppError","stack","constructor","interceptors","use"],"mappings":"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","file":"static/js/main.72b033ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction AutoHidden({ children, enable }) {\n    const [hidden, setHidden] = useState(false);\n\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        const handleNavigation = e => {\n            const window = e.currentTarget;\n\n            if (prev > window.scrollY) {\n                if (lastUpdate - window.scrollY > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(false);\n                }\n            } else if (prev < window.scrollY) {\n                if (window.scrollY - lastUpdate > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(true);\n                }\n            }\n            prev = window.scrollY;\n        };\n        if (enable) {\n            window.addEventListener(\"scroll\", e => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable]);\n\n    return <Zoom in={!hidden}>{children}</Zoom>;\n}\n\nexport default AutoHidden;\n","/* eslint-disable no-case-declarations */\nimport { AnyAction } from \"redux\";\nimport { CloudreveFile } from \"../../types\";\n\ninterface SelectProps {\n    isMultiple: boolean;\n    withFolder: boolean;\n    withFile: boolean;\n}\n\nexport interface ExplorerState {\n    dndSignal: boolean;\n    dndTarget: any;\n    dndSource: any;\n    fileList: CloudreveFile[];\n    dirList: CloudreveFile[];\n    selected: CloudreveFile[];\n    selectProps: SelectProps;\n    lastSelect: {\n        file: CloudreveFile;\n        index: number;\n    };\n    shiftSelectedIds: string[];\n    imgPreview: {\n        first: CloudreveFile;\n        other: [];\n    };\n    keywords: string;\n    fileSave: boolean;\n}\n\nexport const initState: ExplorerState = {\n    dndSignal: false,\n    dndTarget: null,\n    dndSource: null,\n    fileList: [],\n    dirList: [],\n    selected: [],\n    selectProps: {\n        isMultiple: false,\n        withFolder: false,\n        withFile: false\n    },\n    lastSelect: {\n        file: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\"\n        },\n        index: -1\n    },\n    shiftSelectedIds: [],\n    imgPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\"\n        },\n        other: []\n    },\n    keywords: \"\",\n    fileSave: false\n};\n\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\n    const isMultiple = selected.length > 1;\n    let withFolder = false;\n    let withFile = false;\n    selected.forEach(value => {\n        if (value.type === \"dir\") {\n            withFolder = true;\n        } else if (value.type === \"file\") {\n            withFile = true;\n        }\n    });\n    return {\n        isMultiple,\n        withFolder,\n        withFile\n    };\n};\n\nconst explorer = (\n    state: ExplorerState = initState,\n    action: AnyAction\n): ExplorerState => {\n    switch (action.type) {\n        case \"DRAG_AND_DROP\":\n            return Object.assign({}, state, {\n                dndSignal: !state.dndSignal,\n                dndTarget: action.target,\n                dndSource: action.source\n            });\n        case \"SET_FILE_LIST\":\n            return Object.assign({}, state, {\n                fileList: action.list\n            });\n        case \"SET_DIR_LIST\":\n            return Object.assign({}, state, {\n                dirList: action.list\n            });\n        case \"ADD_SELECTED_TARGETS\":\n            const addedSelected = [...state.selected, ...action.targets];\n            return Object.assign({}, state, {\n                selected: addedSelected,\n                selectProps: checkSelectedProps(addedSelected)\n            });\n        case \"SET_SELECTED_TARGET\":\n            const newSelected = action.targets;\n            return Object.assign({}, state, {\n                selected: newSelected,\n                selectProps: checkSelectedProps(newSelected)\n            });\n        case \"RMOVE_SELECTED_TARGETS\":\n            const { fileIds } = action;\n            const filteredSelected = state.selected.filter(file => {\n                return !fileIds.includes(file.id);\n            });\n            return Object.assign({}, state, {\n                selected: filteredSelected,\n                selectProps: checkSelectedProps(filteredSelected)\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false\n                }\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false\n                },\n                keywords: action.keywords\n            });\n        case \"SHOW_IMG_PREIVEW\":\n            return Object.assign({}, state, {\n                imgPreview: {\n                    first: action.first,\n                    other: state.fileList\n                }\n            });\n        case \"SAVE_FILE\":\n            return {\n                ...state,\n                fileSave: !state.fileSave\n            };\n        case \"SET_LAST_SELECT\":\n            const { file, index } = action;\n            return {\n                ...state,\n                lastSelect: {\n                    file,\n                    index\n                }\n            };\n        case \"SET_SHIFT_SELECTED_IDS\":\n            const { shiftSelectedIds } = action;\n            return {\n                ...state,\n                shiftSelectedIds\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false\n                },\n                keywords: \"\"\n            };\n        default:\n            return state;\n    }\n};\n\nexport default explorer;\n","const statusHelper = {\n    isHomePage(path) {\n        return path === \"/home\";\n    },\n    isSharePage(path) {\n        return path && path.startsWith(\"/s/\");\n    },\n    isAdminPage(path) {\n        return path && path.startsWith(\"/admin\");\n    },\n    isLoginPage(path) {\n        return path && path.startsWith(\"/login\");\n    },\n    isMobile() {\n        return window.innerWidth < 600;\n    }\n};\nexport default statusHelper;\n","import React from \"react\";\nimport { Code } from \"react-content-loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10\n        }\n    }\n}));\n\nconst MyLoader = props => <Code className={props.className} />;\n\nfunction TextLoading() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader className={classes.loader} />\n        </div>\n    );\n}\n\nexport default TextLoading;\n","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleDaylightMode } from \"../../actions\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(() => ({\n    icon: {\n        color: \"rgb(255, 255, 255)\",\n        opacity: \"0.54\"\n    }\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const ThemeType = useSelector(state => state.siteConfig.theme.palette.type);\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\n        dispatch\n    ]);\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n    const toggleMode = () => {\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\n        ToggleThemeMode();\n    };\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={isDayLight ? \"切换到深色模式\" : \"切换到浅色模式\"}\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position\n                })}\n                onClick={toggleMode}\n                color=\"inherit\"\n            >\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700]\n        }\n    }\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status === \"success\"\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status === \"success\" ? (\n                                <CheckIcon />\n                            ) : (\n                                <SaveIcon />\n                            )}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\" && (\n                        <CircularProgress\n                            size={68}\n                            className={classes.fabProgress}\n                        />\n                    )}\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    loadingContainer: {\n        display: \"flex\"\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20\n    }\n});\n\nexport default function LoadingDialog() {\n    const classes = useStyles();\n    const open = useSelector(state => state.viewUpdate.modals.loading);\n    const text = useSelector(state => state.viewUpdate.modals.loadingText);\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>{text}</div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList\n} from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function CopyDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(() => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">复制到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        复制到 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Checkbox,\n    FormControl,\n    makeStyles,\n    TextField\n} from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\"\n    },\n    flexCenter: {\n        alignItems: \"center\"\n    },\n    noFlex: {\n        display: \"block\"\n    },\n    scoreCalc: {\n        marginTop: 10\n    }\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {\n            margin: \"auto\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {}\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default\n    }\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        preview: true\n    });\n\n    const handleChange = prop => event => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = event => {\n        event.preventDefault();\n    };\n\n    const randomPassword = () => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random()\n                .toString(36)\n                .substr(2)\n                .slice(2, 8),\n            showPassword: true\n        });\n    };\n\n    const handleExpand = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = prop => () => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\"\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(() => {\n            setShareURL(\"\");\n        }, 500);\n    };\n\n    const submitShare = e => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire ? values.downloads : -1,\n            expire: values.expires,\n            preview: shareOption.preview\n        };\n\n        API.post(\"/share\", submitFormBody)\n            .then(response => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false\n                });\n                setShareOption({\n                    password: false,\n                    expire: false\n                });\n                props.setModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = event => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">创建分享链接</DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"使用密码保护\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        分享密码\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip title=\"随机生成\">\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    {values.showPassword ? (\n                                                        <Visibility />\n                                                    ) : (\n                                                        <VisibilityOff />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"自动过期\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.downloads}\n                                        onChange={handleChange(\"downloads\")}\n                                    >\n                                        <MenuItem value={1}>1 次下载</MenuItem>\n                                        <MenuItem value={2}>2 次下载</MenuItem>\n                                        <MenuItem value={3}>3 次下载</MenuItem>\n                                        <MenuItem value={4}>4 次下载</MenuItem>\n                                        <MenuItem value={5}>5 次下载</MenuItem>\n                                        <MenuItem value={20}>\n                                            20 次下载\n                                        </MenuItem>\n                                        <MenuItem value={50}>\n                                            50 次下载\n                                        </MenuItem>\n                                        <MenuItem value={100}>\n                                            100 次下载\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>或者</Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.expires}\n                                        onChange={handleChange(\"expires\")}\n                                    >\n                                        <MenuItem value={300}>5 分钟</MenuItem>\n                                        <MenuItem value={3600}>1 小时</MenuItem>\n                                        <MenuItem value={24 * 3600}>\n                                            1 天\n                                        </MenuItem>\n                                        <MenuItem value={7 * 24 * 3600}>\n                                            7 天\n                                        </MenuItem>\n                                        <MenuItem value={30 * 24 * 3600}>\n                                            30 天\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>后过期</Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"允许预览\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    是否允许在分享页面预览文件内容\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label=\"分享链接\"\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                <Button onClick={onClose}>关闭</Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            创建分享链接\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { filePath } from \"../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function DecompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        API.post(\"/file/decompress\", {\n            src: filePath(props.selected[0]),\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"解压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">解压送至</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        解压送至 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function CompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        API.post(\"/file/compress\", {\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            name: fileName,\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">存放到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField\n                            onChange={e => setFileName(e.target.value)}\n                            value={fileName}\n                            fullWidth\n                            autoFocus\n                            id=\"standard-basic\"\n                            label=\"压缩文件名\"\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={\n                            selectedPath === \"\" ||\n                            fileName === \"\" ||\n                            props.modalsLoading\n                        }\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    closeAllModals,\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n    refreshStorage,\n    openLoadingDialog\n} from \"../../actions/index\";\nimport PathSelector from \"./PathSelector\";\nimport API, { baseURL } from \"../../middleware/Api\";\nimport {\n    withStyles,\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\n\nconst styles = theme => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: status => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        }\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newFileName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        downloadURL: \"\",\n        remoteDownloadPathSelect: false,\n        source: \"\",\n        purchaseCallback: null,\n        loading: true\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    newNameSuffix = \"\";\n    downloaded = false;\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n        if (this.props.loading !== nextProps.loading) {\n            // 打包下载\n            if (nextProps.loading === true) {\n                if (nextProps.loadingText === \"打包中...\") {\n                    if (\n                        pathHelper.isSharePage(this.props.location.pathname) &&\n                        this.props.share &&\n                        this.props.share.score > 0\n                    ) {\n                        this.scoreHandler(this.archiveDownload);\n                        return;\n                    }\n                    this.archiveDownload();\n                } else if (nextProps.loadingText === \"获取下载地址...\") {\n                    if (\n                        pathHelper.isSharePage(this.props.location.pathname) &&\n                        this.props.share &&\n                        this.props.share.score > 0\n                    ) {\n                        this.scoreHandler(this.Download);\n                        return;\n                    }\n                    this.Download();\n\n                } else if (nextProps.loadingText === \"批量生成中...\") {\n                    this.getMultiLinks();\n                }\n            }\n        }\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            const name = nextProps.selected[0].name;\n            this.setState({\n                newName: name\n            });\n            return;\n        }\n        //获取外链\n        if (\n            this.props.modalsStatus.getSource !==\n            nextProps.modalsStatus.getSource &&\n            nextProps.modalsStatus.getSource === true\n        ) {\n            API.get(\"/file/source/\" + this.props.selected[0].id)\n                .then(response => {\n                    this.setState({\n                        source: response.data.url\n                    });\n                })\n                .catch(error => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n    };\n\n    scoreHandler = callback => {\n        callback();\n    };\n\n\n    Download = () => {\n        let reqURL = \"\";\n        if (this.props.selected[0].key) {\n            const downloadPath =\n                this.props.selected[0].path === \"/\"\n                    ? this.props.selected[0].path + this.props.selected[0].name\n                    : this.props.selected[0].path +\n                    \"/\" +\n                    this.props.selected[0].name;\n            reqURL =\n                \"/share/download/\" +\n                this.props.selected[0].key +\n                \"?path=\" +\n                encodeURIComponent(downloadPath);\n        } else {\n            reqURL = \"/file/download/\" + this.props.selected[0].id;\n        }\n\n        API.put(reqURL)\n            .then(response => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n\n    getMultiLinks = () => {\n        // 针对选择进行处理\n        new Promise(((resolve, reject) => {\n            let items = [];\n            const all = this.props.selected;\n            console.log(\"all\", all);\n            const notDir = all.filter(value => value.type !== \"dir\").map(el=>el.id);\n            console.log(\"notDir\", notDir);\n            items = items.concat(notDir);\n            const dirs = all.filter(value => value.type === \"dir\");\n            console.log(\"dirs\", dirs);\n            if(dirs.length === 0 )resolve(items)\n            Promise.all(dirs.map(value =>\n                new Promise(((resolve1, reject1) => {\n                        API.get(\"/directory\" +\n                            encodeURIComponent((value.path === \"/\" ? \"/\" : value.path + \"/\") + value.name)\n                        )\n                            .then(response => {\n                                console.log(\"response\", response);\n                                console.log(\"data\", response.data);\n                                //todo:递归调用 生成\n                                const objs = response.data.objects.filter(value1 => value1.type !== 'dir').map(obj => obj.id);\n                                console.log(\"objs\", objs);\n                                items = items.concat(objs);\n                                resolve1(items)\n                            })\n                            .catch(error => {\n                                this.props.toggleSnackbar(\n                                    \"top\",\n                                    \"right\",\n                                    error.message,\n                                    \"error\"\n                                );\n                            });\n                    }\n                )))).then(result => {\n                resolve(items);\n            });\n        })).then(items => {\n            console.log(\"items\", items);\n            const p = Promise.all(items.map(value =>\n            new Promise(((resolve, reject) =>{\n                console.log(\"value\", value);\n                API.get(\"/file/source/\" + value)\n                    .then(response => {\n                        resolve(response.data.url)\n                    })\n                    .catch(error => {\n                        this.props.toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            error.message,\n                            \"error\"\n                        );\n                    });\n            } )))).then(urls=>{\n                console.log(\"urls\",urls)\n                return urls.join(\"\\n\")\n            })\n            return p\n        }).then(result => {\n            console.log(\"result\", result);\n            this.setState(\n                {\n                    loading: false,\n                    source: result\n                }\n            );\n        }).catch(error => {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                error.message,\n                \"error\"\n            );\n        }).finally(() => {\n            console.log(\"本次任务完成\");\n        });\n\n    };\n\n    archiveDownload = () => {\n        const dirs = [],\n            items = [];\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null;\n        });\n\n        let reqURL = \"/file/archive\";\n        const postBody = {\n            items: items,\n            dirs: dirs\n        };\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            reqURL = \"/share/archive/\" + window.shareInfo.key;\n            postBody[\"path\"] = this.props.selected[0].path;\n        }\n\n        API.post(reqURL, postBody)\n            .then(response => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    window.location.assign(response.data);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.onClose();\n                this.props.refreshStorage();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    submitRemove = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs\n            }\n        })\n            .then(response => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    setTimeout(this.props.refreshFileList, 500);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.props.setModalsLoading(false);\n                this.props.refreshStorage();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                    ? \"/\"\n                    : this.state.selectedPath\n        })\n            .then(() => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(\"处理中...\");\n            this.submitMove();\n        }\n    };\n\n    submitRename = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const newName = this.state.newName;\n\n        const src = {\n            dirs: [],\n            items: []\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex(value => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex(value => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"新名称与已有文件重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex(value => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件夹名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitCreateNewFile = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex(value => {\n                return value.name === this.state.newFileName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/file/create\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFileName\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitTorrentDownload = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\n            dst:\n                this.state.selectedPath === \"//\" ? \"/\" : this.state.selectedPath\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已创建\",\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitDownload = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        console.log(\"rawUrls\", this.state.downloadURL)\n        const tasks = this.state.downloadURL.split(\"\\n\")\n        console.log(\"tasks\",tasks)\n        const savePath = this.state.selectedPath === \"//\" ? \"/\" : this.state.selectedPath\n        console.log(\"savePath\",savePath)\n        Promise.all(tasks.map(value =>\n            new Promise(((resolve1, reject1) => {\n                const data =  {\n                    url: value,\n                    dst:savePath\n                }\n                console.log(\"data\",data)\n                    API.post(\"/aria2/url\", data)\n                        .then((res) => {\n                            resolve1(res)\n                        })\n                        .catch(error => {\n                            this.props.toggleSnackbar(\n                                \"top\",\n                                \"right\",\n                                error.message,\n                                \"error\"\n                            );\n\n                        });\n                }\n            )))).then(result => {\n                console.log(\"task\",result)\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"任务已创建\",\n                \"success\"\n            );\n            this.onClose();\n            this.props.setModalsLoading(false);\n            window.location.reload();\n        });\n    };\n\n    setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name\n        });\n    };\n\n    remoteDownloadNext = () => {\n        this.props.closeAllModals();\n        this.setState({\n            remoteDownloadPathSelect: true\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newFileName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            downloadURL: \"\",\n            shareUrl: \"\",\n            remoteDownloadPathSelect: false,\n            source: \"\",\n            loading: true,\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    render() {\n        const { classes } = this.props;\n        console.log(\"render了!\")\n        return (\n            <div>\n                {this.state.loading ?\n                    //如果loading 正常加载\n                    <div>\n                        <Loading />\n                        <Dialog\n                            open={this.props.modalsStatus.getSource}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">\n                                获取文件外链\n                            </DialogTitle>\n\n                            <DialogContent>\n                                <form onSubmit={this.submitCreateNewFolder}>\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"newFolderName\"\n                                        label=\"外链地址\"\n                                        type=\"text\"\n                                        value={this.state.source}\n                                        fullWidth\n                                    />\n                                </form>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>关闭</Button>\n                            </DialogActions>\n                        </Dialog>\n                        <Dialog\n                            open={this.props.modalsStatus.createNewFolder}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">新建文件夹</DialogTitle>\n\n                            <DialogContent>\n                                <form onSubmit={this.submitCreateNewFolder}>\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"newFolderName\"\n                                        label=\"文件夹名称\"\n                                        type=\"text\"\n                                        value={this.state.newFolderName}\n                                        onChange={e => this.handleInputChange(e)}\n                                        fullWidth\n                                    />\n                                </form>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>取消</Button>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={this.submitCreateNewFolder}\n                                        color=\"primary\"\n                                        disabled={\n                                            this.state.newFolderName === \"\" ||\n                                            this.props.modalsLoading\n                                        }\n                                    >\n                                        创建\n                                        {this.props.modalsLoading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </div>\n                            </DialogActions>\n                        </Dialog>\n\n                        <Dialog\n                            open={this.props.modalsStatus.createNewFile}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">新建文件</DialogTitle>\n\n                            <DialogContent>\n                                <form onSubmit={this.submitCreateNewFile}>\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"newFileName\"\n                                        label=\"文件名称\"\n                                        type=\"text\"\n                                        value={this.state.newFileName}\n                                        onChange={e => this.handleInputChange(e)}\n                                        fullWidth\n                                    />\n                                </form>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>取消</Button>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={this.submitCreateNewFile}\n                                        color=\"primary\"\n                                        disabled={\n                                            this.state.newFileName === \"\" ||\n                                            this.props.modalsLoading\n                                        }\n                                    >\n                                        创建\n                                        {this.props.modalsLoading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </div>\n                            </DialogActions>\n                        </Dialog>\n\n                        <Dialog\n                            open={this.props.modalsStatus.rename}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                            maxWidth=\"sm\"\n                            fullWidth={true}\n                        >\n                            <DialogTitle id=\"form-dialog-title\">重命名</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    输入{\" \"}\n                                    <strong>\n                                        {this.props.selected.length === 1\n                                            ? this.props.selected[0].name\n                                            : \"\"}\n                                    </strong>{\" \"}\n                                    的新名称：\n                                </DialogContentText>\n                                <form onSubmit={this.submitRename}>\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"newName\"\n                                        label=\"新名称\"\n                                        type=\"text\"\n                                        value={this.state.newName}\n                                        onChange={e => this.handleInputChange(e)}\n                                        fullWidth\n                                    />\n                                </form>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>取消</Button>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={this.submitRename}\n                                        color=\"primary\"\n                                        disabled={\n                                            this.state.newName === \"\" ||\n                                            this.props.modalsLoading\n                                        }\n                                    >\n                                        确定\n                                        {this.props.modalsLoading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </div>\n                            </DialogActions>\n                        </Dialog>\n                        <CopyDialog\n                            open={this.props.modalsStatus.copy}\n                            onClose={this.onClose}\n                            presentPath={this.props.path}\n                            selected={this.props.selected}\n                            modalsLoading={this.props.modalsLoading}\n                        />\n\n                        <Dialog\n                            open={this.props.modalsStatus.move}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">移动至</DialogTitle>\n                            <PathSelector\n                                presentPath={this.props.path}\n                                selected={this.props.selected}\n                                onSelect={this.setMoveTarget}\n                            />\n\n                            {this.state.selectedPath !== \"\" && (\n                                <DialogContent className={classes.contentFix}>\n                                    <DialogContentText>\n                                        移动至{\" \"}\n                                        <strong>{this.state.selectedPathName}</strong>\n                                    </DialogContentText>\n                                </DialogContent>\n                            )}\n                            <DialogActions>\n                                <Button onClick={this.onClose}>取消</Button>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={this.submitMove}\n                                        color=\"primary\"\n                                        disabled={\n                                            this.state.selectedPath === \"\" ||\n                                            this.props.modalsLoading\n                                        }\n                                    >\n                                        确定\n                                        {this.props.modalsLoading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </div>\n                            </DialogActions>\n                        </Dialog>\n                        <Dialog\n                            open={this.props.modalsStatus.remove}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">删除对象</DialogTitle>\n\n                            <DialogContent>\n                                <DialogContentText>\n                                    确定要删除\n                                    {this.props.selected.length === 1 && (\n                                        <strong> {this.props.selected[0].name} </strong>\n                                    )}\n                                    {this.props.selected.length > 1 && (\n                                        <span>\n                    这{this.props.selected.length}个对象\n                    </span>\n                                    )}\n                                    吗？\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>取消</Button>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={this.submitRemove}\n                                        color=\"primary\"\n                                        disabled={this.props.modalsLoading}\n                                    >\n                                        确定\n                                        {this.props.modalsLoading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </div>\n                            </DialogActions>\n                        </Dialog>\n\n                        <CreatShare\n                            open={this.props.modalsStatus.share}\n                            onClose={this.onClose}\n                            modalsLoading={this.props.modalsLoading}\n                            setModalsLoading={this.props.setModalsLoading}\n                            selected={this.props.selected}\n                        />\n\n                        <Dialog\n                            open={this.props.modalsStatus.music}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\n\n                            <DialogContent>\n                                <DialogContentText>\n                                    {this.props.selected.length !== 0 && (\n                                        <audio\n                                            controls\n                                            src={\n                                                pathHelper.isSharePage(\n                                                    this.props.location.pathname\n                                                )\n                                                    ? baseURL +\n                                                    \"/share/preview/\" +\n                                                    this.props.selected[0].key +\n                                                    (this.props.selected[0].key\n                                                        ? \"?path=\" +\n                                                        encodeURIComponent(\n                                                            this.props.selected[0]\n                                                                .path === \"/\"\n                                                                ? this.props\n                                                                    .selected[0]\n                                                                    .path +\n                                                                this.props\n                                                                    .selected[0]\n                                                                    .name\n                                                                : this.props\n                                                                    .selected[0]\n                                                                    .path +\n                                                                \"/\" +\n                                                                this.props\n                                                                    .selected[0]\n                                                                    .name\n                                                        )\n                                                        : \"\")\n                                                    : baseURL +\n                                                    \"/file/preview/\" +\n                                                    this.props.selected[0].id\n                                            }\n                                        />\n                                    )}\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>关闭</Button>\n                            </DialogActions>\n                        </Dialog>\n                        <Dialog\n                            open={this.props.modalsStatus.remoteDownload}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                            fullWidth\n                        >\n                            <DialogTitle id=\"form-dialog-title\">\n                                新建离线下载任务\n                            </DialogTitle>\n\n                            <DialogContent>\n                                <DialogContentText>\n                                    <TextField\n                                        label=\"文件地址\"\n                                        autoFocus\n                                        fullWidth\n                                        id=\"downloadURL\"\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"输入文件下载地址，支持 HTTP(s)/FTP/磁力链,可输入多行链接,每行使用回车间隔\"\n                                        multiline\n                                        rowsMin={3}\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>关闭</Button>\n                                <Button\n                                    onClick={this.remoteDownloadNext}\n                                    color=\"primary\"\n                                    disabled={\n                                        this.props.modalsLoading ||\n                                        this.state.downloadURL === \"\"\n                                    }\n                                >\n                                    下一步\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                        <Dialog\n                            open={this.state.remoteDownloadPathSelect}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">\n                                选择存储位置\n                            </DialogTitle>\n                            <PathSelector\n                                presentPath={this.props.path}\n                                selected={this.props.selected}\n                                onSelect={this.setMoveTarget}\n                            />\n\n                            {this.state.selectedPath !== \"\" && (\n                                <DialogContent className={classes.contentFix}>\n                                    <DialogContentText>\n                                        下载至{\" \"}\n                                        <strong>{this.state.selectedPathName}</strong>\n                                    </DialogContentText>\n                                </DialogContent>\n                            )}\n                            <DialogActions>\n                                <Button onClick={this.onClose}>取消</Button>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={this.submitDownload}\n                                        color=\"primary\"\n                                        disabled={\n                                            this.state.selectedPath === \"\" ||\n                                            this.props.modalsLoading\n                                        }\n                                    >\n                                        创建任务\n                                        {this.props.modalsLoading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </div>\n                            </DialogActions>\n                        </Dialog>\n                        <Dialog\n                            open={this.props.modalsStatus.torrentDownload}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">\n                                选择存储位置\n                            </DialogTitle>\n                            <PathSelector\n                                presentPath={this.props.path}\n                                selected={this.props.selected}\n                                onSelect={this.setMoveTarget}\n                            />\n\n                            {this.state.selectedPath !== \"\" && (\n                                <DialogContent className={classes.contentFix}>\n                                    <DialogContentText>\n                                        下载至{\" \"}\n                                        <strong>{this.state.selectedPathName}</strong>\n                                    </DialogContentText>\n                                </DialogContent>\n                            )}\n                            <DialogActions>\n                                <Button onClick={this.onClose}>取消</Button>\n                                <div className={classes.wrapper}>\n                                    <Button\n                                        onClick={this.submitTorrentDownload}\n                                        color=\"primary\"\n                                        disabled={\n                                            this.state.selectedPath === \"\" ||\n                                            this.props.modalsLoading\n                                        }\n                                    >\n                                        创建任务\n                                        {this.props.modalsLoading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </div>\n                            </DialogActions>\n                        </Dialog>\n\n                        <DecompressDialog\n                            open={this.props.modalsStatus.decompress}\n                            onClose={this.onClose}\n                            presentPath={this.props.path}\n                            selected={this.props.selected}\n                            modalsLoading={this.props.modalsLoading}\n                        />\n                        <CompressDialog\n                            open={this.props.modalsStatus.compress}\n                            onClose={this.onClose}\n                            presentPath={this.props.path}\n                            selected={this.props.selected}\n                            modalsLoading={this.props.modalsLoading}\n                        />\n                    </div>\n                    //状态被改变\n                    : <div>\n                        <Loading />\n                        <Dialog\n                            open={this.state.loading === false}\n                            onClose={this.onClose}\n                            aria-labelledby=\"form-dialog-title\"\n                        >\n                            <DialogTitle id=\"form-dialog-title\">\n                                批量获得下载链接\n                            </DialogTitle>\n                            <DialogContent>\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"multiLinks\"\n                                        placeholder=\"外链地址\"\n                                        value={this.state.source === \"\" ?\"什么也没有... 请检查您选中的东西中是否有文件\":this.state.source}\n                                        fullWidth\n                                        multiline\n                                        rowsMax={10}\n                                        rowsMin={3}\n                                    />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.onClose}>关闭</Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ModalsCompoment)));\n\nexport default Modals;\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb: any) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser() {\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\n    },\n    SetUser(newUser: any) {\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    Check(): boolean {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null) {\n            return !Auth.GetUser().anonymous;\n        }\n        return false;\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        const oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key: string, value: any) {\n        let preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        preference = preference == null ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    GetPreference(key: string): any | null {\n        const preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        if (preference && preference[key]) {\n            return preference[key];\n        }\n        return null;\n    }\n};\n\nexport default Auth;\n","export const sizeToString = bytes => {\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = path => {\n    return path;\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    let url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        const prefix = url.substring(0, url.indexOf(paramName));\n        let suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const allowSharePreview = () => {\n    if (!window.isSharePage) {\n        return true;\n    }\n    if (window.isSharePage) {\n        if (window.shareInfo.allowPreview) {\n            return true;\n        }\n        if (window.userInfo.uid === -1) {\n            return false;\n        }\n        return true;\n    }\n};\n\nexport const checkGetParameters = field => {\n    const url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = color => {\n    const metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\"\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport const decode = c => {\n    let e = c.height,\n        a = c.width,\n        b = document.createElement(\"canvas\");\n    b.height = e;\n    b.width = a;\n    b = b.getContext(\"2d\");\n    b.drawImage(c, 0, 0);\n    c = b.getImageData(0, 0, a, e);\n    b = [];\n    for (let d = 0; d < a * e * 4; d += 4)\n        0 !== (d + 4) % (4 * a) &&\n            [].push.apply(b, [].slice.call(c.data, d, d + 3));\n    c = e = 0;\n    for (\n        a = \"\";\n        c < b.length &&\n        (16 >= c ||\n            (0 === b[c] % 2 ? (e++, (a += \"1\")) : ((e = 0), (a += \"0\")),\n            17 !== e));\n        c++\n    );\n    a = a.slice(0, -16);\n    a = a.replace(/[\\s]/g, \"\").replace(/(\\d{16})(?=\\d)/g, \"$1 \");\n    e = \"\";\n    a = a.split(\" \");\n    for (c = 0; c < a.length; c++) {\n        b = a[c];\n        if (16 === b.length) {\n            b = parseInt(b, 2);\n            e += String.fromCharCode(b);\n        }\n    }\n    return e;\n};\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), c => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    const folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex) {\n    return parseInt(hex, 16)\n        .toString(2)\n        .padStart(8, \"0\");\n}\n\nexport function pathJoin(parts, sep) {\n    const separator = sep || \"/\";\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n\nexport function basename(path) {\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function transformTime(timestamp = +new Date()) {\n    if (timestamp) {\n        const time = new Date(timestamp);\n        const y = time.getFullYear(); //getFullYear方法以四位数字返回年份\n        const M = time.getMonth() + 1; // getMonth方法从 Date 对象返回月份 (0 ~ 11)，返回结果需要手动加一\n        const d = time.getDate(); // getDate方法从 Date 对象返回一个月中的某一天 (1 ~ 31)\n        const h = time.getHours(); // getHours方法返回 Date 对象的小时 (0 ~ 23)\n        const m = time.getMinutes(); // getMinutes方法返回 Date 对象的分钟 (0 ~ 59)\n        const s = time.getSeconds(); // getSeconds方法返回 Date 对象的秒数 (0 ~ 59)\n        return y + \"-\" + M + \"-\" + d + \" \" + h + \":\" + m + \":\" + s;\n    } else {\n        return \"\";\n    }\n}\n\nexport function randomStr(length) {\n    let result = \"\";\n    const characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n    return result;\n}\n\nexport function getNumber(base, conditions) {\n    conditions.forEach(v => {\n        if (v) {\n            base++;\n        }\n    });\n    return base;\n}\n\nexport const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n};\n\nexport function vhCheck() {\n    const vh = window.innerHeight;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport Editor from \"for-editor\";\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    player: {\n        borderRadius: \"4px\"\n    },\n    root: {\n        backgroundColor: \"white\",\n        borderRadius: \"8px\"\n    },\n    \"@global\": {\n        \".for-toolbar\": {\n            overflowX: \"auto!important\"\n        }\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function TextViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    const $vm = React.createRef();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then(response => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = file =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch(error => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addImg = async $file => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Editor\n                        ref={$vm}\n                        value={content}\n                        onSave={() => save()}\n                        addImg={$file => addImg($file)}\n                        onChange={value => setContent(value)}\n                        toolbar={{\n                            h1: true, // h1\n                            h2: true, // h2\n                            h3: true, // h3\n                            h4: true, // h4\n                            img: true, // 图片\n                            link: true, // 链接\n                            code: true, // 代码块\n                            preview: true, // 预览\n                            expand: true, // 全屏\n                            /* v0.0.9 */\n                            undo: true, // 撤销\n                            redo: true, // 重做\n                            save: false, // 保存\n                            /* v0.2.3 */\n                            subfield: true // 单双栏模式\n                        }}\n                    />\n                )}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && (\n                <SaveButton onClick={save} status={status} />\n            )}\n        </div>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Paper, useTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport SaveButton from \"../Dial/Save\";\nimport { codePreviewSuffix } from \"../../config\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nconst MonacoEditor = React.lazy(() =>\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\n);\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    editor: {\n        borderRadius: \"4px\"\n    },\n    \"@global\": {\n        \".overflow-guard\": {\n            borderRadius: \"4px!important\"\n        }\n    },\n    formControl: {\n        margin: \"8px 16px 8px 16px\"\n    },\n    toobar: {\n        textAlign: \"right\"\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function CodeViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [suffix, setSuffix] = useState(\"javascript\");\n\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            const extension = query.get(\"p\").split(\".\");\n            setSuffix(codePreviewSuffix[extension.pop()]);\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            const extension = query.get(\"name\").split(\".\");\n            setSuffix(codePreviewSuffix[extension.pop()]);\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then(response => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch(error => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const isSharePage = pathHelper.isSharePage(location.pathname);\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.toobar}>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={suffix}\n                            onChange={e => setSuffix(e.target.value)}\n                        >\n                            {Array.from(\n                                new Set(\n                                    Object.keys(codePreviewSuffix).map(k => {\n                                        return codePreviewSuffix[k];\n                                    })\n                                )\n                            ).map((extension, index) => (\n                                <MenuItem value={extension} key={index}>\n                                    {extension}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <Divider />\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Suspense fallback={<TextLoading />}>\n                        <MonacoEditor\n                            height=\"600\"\n                            language={suffix}\n                            theme={\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\n                            }\n                            value={content}\n                            options={{\n                                readOnly: isSharePage,\n                                extraEditorClassName: classes.editor\n                            }}\n                            onChange={value => setContent(value)}\n                        />\n                    </Suspense>\n                )}\n            </Paper>\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {} from \"../../actions\";\nimport classNames from \"classnames\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport { green, amber } from \"@material-ui/core/colors\";\n\nimport {\n    withStyles,\n    SnackbarContent,\n    Snackbar,\n    IconButton\n} from \"@material-ui/core\";\n\nconst mapStateToProps = state => {\n    return {\n        snackbar: state.viewUpdate.snackbar\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n};\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600]\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark\n    },\n    warning: {\n        backgroundColor: amber[700]\n    },\n    icon: {\n        fontSize: 20\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1)\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\"\n    }\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon\n                        className={classNames(\n                            classes.icon,\n                            classes.iconVariant\n                        )}\n                    />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>\n            ]}\n            {...other}\n        />\n    );\n}\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = theme => ({\n    margin: {\n        margin: theme.spacing(1)\n    }\n});\nclass SnackbarCompoment extends Component {\n    state = {\n        open: false\n    };\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\n            this.setState({ open: true });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: this.props.snackbar.vertical,\n                    horizontal: this.props.snackbar.horizontal\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleClose}\n                    variant={this.props.snackbar.color}\n                    message={this.props.snackbar.msg}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SnackbarCompoment));\n\nexport default AlertBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    LogoutVariant,\n    HomeAccount,\n    DesktopMacDashboard,\n    AccountArrowRight,\n    AccountPlus\n} from \"mdi-material-ui\";\nimport {\n    setSessionStatus,\n    setUserPopover,\n    toggleSnackbar\n} from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Avatar,\n    Popover,\n    Typography,\n    Chip,\n    ListItemIcon,\n    MenuItem,\n    Divider\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\n\nconst mapStateToProps = state => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus: status => {\n            dispatch(setSessionStatus(status));\n        }\n    };\n};\nconst styles = () => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\"\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\"\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\"\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\"\n    },\n    badge: {\n        marginTop: \"10px\"\n    },\n    visitorMenu: {\n        width: 200\n    }\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = url => {\n        window.location.href = url;\n    };\n\n    sigOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\"\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\"\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            登录\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus />\n                            </ListItemIcon>\n                            注册\n                        </MenuItem>\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    style={{\n                                        fontSize: \"0.875rem\"\n                                    }}\n                                    noWrap\n                                >\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            {!isAdminPage && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\"\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\n                                            \"/profile/\" + user.id\n                                        );\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <HomeAccount />\n                                    </ListItemIcon>\n                                    个人主页\n                                </MenuItem>\n                            )}\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\"\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    管理面板\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                style={{\n                                    padding: \" 11px 16px 11px 16px\"\n                                }}\n                                onClick={this.sigOut}\n                            >\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                退出登录\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarPopoverCompoment)));\n\nexport default UserAvatarPopover;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport { setUserPopover } from \"../../actions\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Grow,\n    Avatar,\n    IconButton,\n    Tooltip\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport { Home } from \"@material-ui/icons\";\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        }\n    };\n};\n\nconst styles = theme => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        },\n        whiteSpace: \"nowrap\"\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\"\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\"\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\"\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\"\n    },\n    badge: {\n        marginTop: \"10px\"\n    },\n    visitorMenu: {\n        width: 200\n    }\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    showUserInfo = e => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        });\n    };\n\n    openURL = url => {\n        window.location.href = url;\n    };\n\n    returnHome = () => {\n        window.location.href = \"/home\";\n    };\n\n    render() {\n        const { classes } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && (\n                            <>\n                                <DarkModeSwitcher position=\"top\" />\n                                {loginCheck && (\n                                    <>\n                                        <Tooltip\n                                            title={\"设置\"}\n                                            placement=\"bottom\"\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/setting?\"\n                                                    )\n                                                }\n                                                color=\"inherit\"\n                                            >\n                                                <SettingIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {isAdminPage && (\n                            <Tooltip title={\"返回主页\"} placement=\"bottom\">\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={this.returnHome}\n                                >\n                                    <Home />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarCompoment)));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport {\n    drawerToggleAction,\n    setSelectedTarget,\n    navigateTo,\n    openCreateFolderDialog,\n    changeContextMenu,\n    searchMyFile,\n    saveFile,\n    openMusicDialog,\n    showImgPreivew,\n    toggleSnackbar,\n    openMoveDialog,\n    openRemoveDialog,\n    openShareDialog,\n    openRenameDialog,\n    openLoadingDialog,\n    setSessionStatus\n} from \"../../actions\";\nimport {\n    allowSharePreview,\n    checkGetParameters,\n    changeThemeColor\n} from \"../../utils\";\nimport Uploader from \"../Upload/Uploader.js\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport { AccountArrowRight, AccountPlus, LogoutVariant } from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    withStyles,\n    withTheme,\n    Drawer,\n    SwipeableDrawer,\n    IconButton,\n    Hidden,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    List,\n    Grow,\n    Tooltip\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FileTag from \"./FileTags\";\nimport { Assignment, Devices, Settings } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\n\nvhCheck();\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst mapStateToProps = state => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        keywords: state.explorer.keywords,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDesktopToggle: open => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: path => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        searchMyFile: keywords => {\n            dispatch(searchMyFile(keywords));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        },\n        setSessionStatus: () => {\n            dispatch(setSessionStatus());\n        }\n    };\n};\n\nconst styles = theme => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\"\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    icon: {\n        marginRight: theme.spacing(2)\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    menuIcon: {\n        marginRight: 20\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile\n    },\n    upDrawer: {\n        overflowX: \"hidden\"\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: 0\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    grow: {\n        flexGrow: 1\n    },\n    badge: {\n        top: 1,\n        right: -15\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    sectionForFile: {\n        display: \"flex\"\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\"\n    },\n    fabButton: {\n        borderRadius: \"100px\"\n    },\n    badgeFix: {\n        right: \"10px\"\n    },\n    iconFix: {\n        marginLeft: \"16px\"\n    },\n    dividerFix: {\n        marginTop: \"8px\"\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\"\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\"\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\"\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\"\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\"\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 145px)\"\n        },\n\n        [theme.breakpoints.down(\"sm\")]: {\n            minHeight: \"calc(var(--vh, 100vh) - 360px)\"\n        }\n    }\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    UNSAFE_componentWillMount() {\n        this.unlisten = this.props.history.listen(() => {\n            this.setState(() => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount() {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default\n        );\n    }\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (\n            (this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)) !==\n            (nextProps.selected.length <= 1 &&\n                !(!nextProps.isMultiple && nextProps.withFile))\n        ) {\n            changeThemeColor(\n                !(\n                    this.props.selected.length <= 1 &&\n                    !(!this.props.isMultiple && this.props.withFile)\n                )\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    loadUploader = () => {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            return (\n                <>\n                    {this.props.loadUploader && this.props.isLogin && (\n                        <Uploader />\n                    )}\n                </>\n            );\n        }\n    };\n\n    openPreview = () => {\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                this.props.changeContextMenu(\"file\", false);\n                return;\n            }\n        }\n        this.props.changeContextMenu(\"file\", false);\n        const previewPath =\n            this.props.selected[0].path === \"/\"\n                ? this.props.selected[0].path + this.props.selected[0].name\n                : this.props.selected[0].path +\n                  \"/\" +\n                  this.props.selected[0].name;\n        switch (isPreviewable(this.props.selected[0].name)) {\n            case \"img\":\n                this.props.showImgPreivew(this.props.selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/doc?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/video?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/text?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"pdf\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/pdf?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/pdf?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"code\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/code?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/code?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            default:\n                return;\n        }\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            return;\n        }\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    archiveDownload = () => {\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n\n    signOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .finally(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List>\n                                <ListItem\n                                    button\n                                    key=\"我的分享\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/shares?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"我的分享\" />\n                                </ListItem>\n                                <ListItem\n                                    button\n                                    key=\"离线下载\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/aria2?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"离线下载\" />\n                                </ListItem>\n                                {user.group.webdav && (\n                                    <ListItem\n                                        button\n                                        key=\"WebDAV\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Devices\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"WebDAV\" />\n                                    </ListItem>\n                                )}\n\n                                <ListItem\n                                    button\n                                    key=\"任务队列\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/tasks?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Assignment\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"任务队列\" />\n                                </ListItem>\n                            </List>\n                        </div>\n\n                        {pathHelper.isMobile() && (\n                            <>\n                                <Divider />\n                                <List>\n                                    <ListItem\n                                        button\n                                        key=\"个人设置\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/setting?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Settings\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"个人设置\" />\n                                    </ListItem>\n\n                                    <ListItem\n                                        button\n                                        key=\"退出登录\"\n                                        onClick={this.signOut}\n                                    >\n                                        <ListItemIcon>\n                                            <LogoutVariant\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"退出登录\" />\n                                    </ListItem>\n                                </List>\n                            </>\n                        )}\n                        <div>\n                            <StorageBar></StorageBar>\n                        </div>\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary=\"登录\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            key=\"注册\"\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"注册\" />\n                        </ListItem>\n                    </div>\n                )}\n                {/*{pathHelper.isSharePage(this.props.location.pathname) && (*/}\n                {/*    <div className={classes.stickFooter}>*/}\n                {/*        <Divider />*/}\n                {/*        <a*/}\n                {/*            className={classes.shareInfoContainer}*/}\n                {/*            href={\"/Profile/\" + window.shareInfo.ownerUid}*/}\n                {/*        >*/}\n                {/*            <Avatar*/}\n                {/*                src={*/}\n                {/*                    \"/Member/Avatar/\" +*/}\n                {/*                    window.shareInfo.ownerUid +*/}\n                {/*                    \"/l\"*/}\n                {/*                }*/}\n                {/*                className={classes.shareAvatar}*/}\n                {/*            />*/}\n                {/*            <div className={classes.ownerInfo}>*/}\n                {/*                <Typography noWrap>*/}\n                {/*                    {window.shareInfo.ownerNick}*/}\n                {/*                </Typography>*/}\n                {/*                <Typography*/}\n                {/*                    noWrap*/}\n                {/*                    variant=\"caption\"*/}\n                {/*                    color=\"textSecondary\"*/}\n                {/*                >*/}\n                {/*                    分享于{window.shareInfo.shareDate}*/}\n                {/*                </Typography>*/}\n                {/*            </div>*/}\n                {/*        </a>*/}\n                {/*    </div>*/}\n                {/*)}*/}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={this.handleDrawerToggle}\n                                    className={classes.menuButton}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={() =>\n                                        this.props.handleDesktopToggle(\n                                            !this.props.desktopOpen\n                                        )\n                                    }\n                                    className={classes.menuButtonDesktop}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname\n                                )) && (\n                                <Grow\n                                    in={\n                                        this.props.selected.length > 1 ||\n                                        (!this.props.isMultiple &&\n                                            this.props.withFile)\n                                    }\n                                >\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <Typography\n                                    variant=\"h6\"\n                                    color=\"inherit\"\n                                    noWrap\n                                    onClick={() => {\n                                        this.props.history.push(\"/\");\n                                    }}\n                                >\n                                    {this.props.subTitle\n                                        ? this.props.subTitle\n                                        : this.props.title}\n                                </Typography>\n                            )}\n\n                        {!this.props.isMultiple &&\n                            this.props.withFile &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {(isHomePage ||\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected.length}个对象\n                                </Typography>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            !isHomePage &&\n                            !pathHelper.isSharePage(\n                                this.props.location.pathname\n                            ) &&\n                            Auth.Check(this.props.isLogin) &&\n                            !checkGetParameters(\"share\") && (\n                                <div className={classes.sectionForFile}>\n                                    <Tooltip title=\"保存\">\n                                        <IconButton\n                                            color=\"inherit\"\n                                            onClick={() =>\n                                                this.props.saveFile()\n                                            }\n                                        >\n                                            <SaveIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </div>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile &&\n                                        isPreviewable(\n                                            this.props.selected[0].name\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip title=\"打开\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openPreview()\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip title=\"下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) &&\n                                        user.group.allowArchiveDownload && (\n                                            <Grow\n                                                in={\n                                                    (this.props.isMultiple ||\n                                                        this.props\n                                                            .withFolder) &&\n                                                    user.group\n                                                        .allowArchiveDownload\n                                                }\n                                            >\n                                                <Tooltip title=\"打包下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.archiveDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n\n                                    {!this.props.isMultiple &&\n                                        this.props.withFolder && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFolder\n                                                }\n                                            >\n                                                <Tooltip title=\"进入目录\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.navigateTo(\n                                                                this.props\n                                                                    .path ===\n                                                                    \"/\"\n                                                                    ? this.props\n                                                                          .path +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                                    : this.props\n                                                                          .path +\n                                                                          \"/\" +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                            )\n                                                        }\n                                                    >\n                                                        <OpenFolderIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"分享\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openShareDialog()\n                                                    }\n                                                >\n                                                    <ShareIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"重命名\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip title=\"移动\">\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip title=\"删除\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <UserAvatar />}\n                    </Toolbar>\n                </AppBar>\n                {this.loadUploader()}\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(() => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classNames({\n                                [classes.drawerOpen]: this.props.desktopOpen,\n                                [classes.drawerClose]: !this.props.desktopOpen\n                            })\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTheme(withStyles(styles)(withRouter(NavbarCompoment))));\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\nimport { searchMyFile } from \"../../actions\";\n\nimport {\n    withStyles,\n    InputBase,\n    Popper,\n    Fade,\n    Paper,\n    MenuItem,\n    ListItemIcon,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport { HotKeys, configure } from \"react-hotkeys\";\n\nconfigure({\n    ignoreTags: []\n});\n\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        searchMyFile: keywords => {\n            dispatch(searchMyFile(keywords));\n        }\n    };\n};\n\nconst styles = theme => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25)\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\"\n        }\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\"\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300\n            }\n        }\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364\n    }\n});\n\nconst keyMap = {\n    SEARCH: \"enter\"\n};\n\nclass SearchBarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\"\n        };\n    }\n\n    handlers = {\n        SEARCH: e => {\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\n                this.searchMyFile();\n            } else {\n                this.searchShare();\n            }\n            e.target.blur();\n        }\n    };\n\n    handleChange = event => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\"\n        });\n    };\n\n    searchMyFile = () => {\n        this.props.searchMyFile(\"keywords/\" + this.input);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\n            \"/search?keywords=\" + encodeURIComponent(this.input)\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                    <InputBase\n                        placeholder=\"搜索...\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput\n                        }}\n                        onChange={this.handleChange}\n                        onBlur={this.cancelSuggest}\n                        value={this.state.input}\n                    />\n                </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    在我的文件中搜索{\" \"}\n                                                    <strong>\n                                                        {this.state.input}\n                                                    </strong>\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                在全站分享中搜索{\" \"}\n                                                <strong>\n                                                    {this.state.input}\n                                                </strong>\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SearchBarCompoment)));\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../utils\";\nimport { toggleSnackbar } from \"../../actions\";\n\nimport {\n    withStyles,\n    LinearProgress,\n    Typography,\n    Divider,\n    Tooltip\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router\";\n\nconst mapStateToProps = state => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nconst styles = theme => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\"\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\"\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"11px\"\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\"\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\"\n        },\n        marginTop: \"5px\"\n    },\n    bar: {\n        marginTop: \"5px\"\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper\n    }\n});\n\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then(response => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"您的已用容量已超过容量配额，请尽快删除多余文件或购买容量\",\n                        \"warning\"\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total)\n                });\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            存储空间{\"   \"}\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={\n                                        \"已使用\" +\n                                        (this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used) +\n                                        \"，共\" +\n                                        (this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total)\n                                    }\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        已使用\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        ，共\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(StorageBarCompoment)));\n\nexport default StorageBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setUserPopover } from \"../../actions\";\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst mapStateToProps = state => {\n    return {\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        }\n    };\n};\n\nconst styles = theme => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\"\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow: \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\"\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\"\n    },\n    nickName: {\n        color: \"#fff\",\n        marginLeft: \"10px\",\n        marginTop: \"15px\",\n        fontSize: \"17px\"\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"end\"\n    },\n    groupName: {\n        marginLeft: \"10px\",\n        color: \"#ffffff\",\n        opacity: \"0.54\"\n    },\n    storageCircle: {\n        width: \"200px\"\n    }\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = e => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    {/* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\" />\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin ? user.nickname : \"未登录\"}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin ? user.group.name : \"游客\"}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(UserInfoCompoment));\n\nexport default UserInfo;\n","import React, { useCallback, useState, Suspense } from \"react\";\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    Triangle,\n    TriangleOutline,\n    FolderHeartOutline,\n    TagPlus\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": { margin: 0 }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\"\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\"\n    },\n    iconFix: {\n        marginLeft: \"16px\"\n    },\n    hiddenButton: {\n        display: \"none\"\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2)\n    },\n    overFlow: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n    }\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline\n};\n\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\n\nexport default function FileTag() {\n    const classes = useStyles();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal, setAddTagModal] = useState(false);\n    const [tagHover, setTagHover] = useState(null);\n    const [tags, setTags] = useState(\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\n    );\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback(k => dispatch(searchMyFile(k)), [\n        dispatch\n    ]);\n    const NavigateTo = useCallback(k => dispatch(navigateTo(k)), [dispatch]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            const IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = tag => {\n        const newTags = [...tags, tag];\n        setTags(newTags);\n        const user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = id => {\n        API.delete(\"/tag/\" + id)\n            .then(() => {\n                const newTags = tags.filter(v => {\n                    return v.id !== id;\n                });\n                setTags(newTags);\n                const user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag\n                    onSuccess={submitSuccess}\n                    open={addTagModal}\n                    onClose={() => setAddTagModal(false)}\n                />\n            </Suspense>\n            <ExpansionPanel\n                square\n                expanded={tagOpen && isHomePage}\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <ListItem\n                        button\n                        key=\"我的文件\"\n                        onClick={() =>\n                            !isHomePage && history.push(\"/home?path=%2F\")\n                        }\n                    >\n                        <ListItemIcon>\n                            <KeyboardArrowRight\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            tagOpen && isHomePage,\n                                        [classes.iconFix]: true\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                            {!(tagOpen && isHomePage) && (\n                                <FolderShared className={classes.iconFix} />\n                            )}\n                        </ListItemIcon>\n                        <ListItemText primary=\"我的文件\" />\n                    </ListItem>\n                    <Divider />\n                </ExpansionPanelSummary>\n\n                <ExpansionPanelDetails>\n                    <List onMouseLeave={() => setTagHover(null)}>\n                        <ListItem\n                            button\n                            id=\"pickfiles\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        <ListItem\n                            button\n                            id=\"pickfolder\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        {[\n                            {\n                                key: \"视频\",\n                                id: \"video\",\n                                icon: (\n                                    <VideoIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconVideo\n                                        ]}\n                                    />\n                                )\n                            },\n                            {\n                                key: \"图片\",\n                                id: \"image\",\n                                icon: (\n                                    <ImageIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconImg\n                                        ]}\n                                    />\n                                )\n                            },\n                            {\n                                key: \"音频\",\n                                id: \"audio\",\n                                icon: (\n                                    <MusicIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconAudio\n                                        ]}\n                                    />\n                                )\n                            },\n                            {\n                                key: \"文档\",\n                                id: \"doc\",\n                                icon: (\n                                    <DocIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconDoc\n                                        ]}\n                                    />\n                                )\n                            }\n                        ].map(v => (\n                            <ListItem\n                                button\n                                key={v.key}\n                                onClick={() => SearchMyFile(v.id + \"/internal\")}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {v.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={v.key} />\n                            </ListItem>\n                        ))}\n                        {tags.map(v => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={() => setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id);\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"FolderHeartOutline\",\n                                        v.type === 0 ? v.color : null\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    className={classes.overFlow}\n                                    primary={v.name}\n                                />\n\n                                {tagHover === v.id && (\n                                    <ListItemSecondaryAction\n                                        onClick={() => submitDelete(v.id)}\n                                    >\n                                        <IconButton\n                                            size={\"small\"}\n                                            edge=\"end\"\n                                            aria-label=\"delete\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        ))}\n\n                        <ListItem button onClick={() => setAddTagModal(true)}>\n                            <ListItemIcon className={classes.subMenu}>\n                                <TagPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary={\"添加标签...\"} />\n                        </ListItem>\n                    </List>{\" \"}\n                    <Divider />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { showImgPreivew } from \"../../actions/index\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport { PhotoSlider } from \"react-photo-view\";\nimport \"react-photo-view/dist/index.css\";\nimport * as explorer from \"../../redux/explorer/reducer\";\n\nconst styles = () => ({});\n\nconst mapStateToProps = state => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        }\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false\n    };\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newImg = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex: firstOne,\n                    items: items,\n                    isOpen: true\n                });\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map(value => {\n                const fileType = value.name\n                    .split(\".\")\n                    .pop()\n                    .toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newImg = {\n                        intro: value.name,\n                        src: src\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex: firstOne,\n                items: items,\n                isOpen: true\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\n        this.setState({\n            isOpen: false\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen, items } = this.state;\n\n        return (\n            <div>\n                {isOpen && (\n                    <PhotoSlider\n                        images={items}\n                        visible={isOpen}\n                        onClose={() => this.handleClose()}\n                        index={photoIndex}\n                        onIndexChange={n =>\n                            this.setState({\n                                photoIndex: n\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","export const isDefined = val => val != null;\nexport const isFunction = val => typeof val === \"function\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n\nexport const newScript = src => cb => {\n    const scriptElem = document.createElement(\"script\");\n    if (typeof src === \"object\") {\n        // copy every property to the element\n        for (const key in src) {\n            if (Object.prototype.hasOwnProperty.call(src, key)) {\n                scriptElem[key] = src[key];\n            }\n        }\n        src = src.src;\n    } else {\n        scriptElem.src = src;\n    }\n    scriptElem.addEventListener(\"load\", () => cb(null, src));\n    scriptElem.addEventListener(\"error\", () => cb(true, src));\n    document.body.appendChild(scriptElem);\n    return scriptElem;\n};\n\nconst keyIterator = cols => {\n    const keys = Object.keys(cols);\n    let i = -1;\n    return {\n        next() {\n            i++; // inc\n            if (i >= keys.length) return null;\n            else return keys[i];\n        }\n    };\n};\n\n// tasks should be a collection of thunk\nexport const parallel = (...tasks) => each => cb => {\n    let hasError = false;\n    let successed = 0;\n    const ret = [];\n    tasks = tasks.filter(isFunction);\n\n    if (tasks.length <= 0) cb(null);\n    else {\n        tasks.forEach((task, i) => {\n            const thunk = task;\n            thunk((err, ...args) => {\n                if (err) hasError = true;\n                else {\n                    // collect result\n                    if (args.length <= 1) args = args[0];\n\n                    ret[i] = args;\n                    successed++;\n                }\n\n                if (isFunction(each)) each.call(null, err, args, i);\n\n                if (hasError) cb(true);\n                else if (tasks.length === successed) {\n                    cb(null, ret);\n                }\n            });\n        });\n    }\n};\n\n// tasks should be a collection of thunk\nexport const series = (...tasks) => each => cb => {\n    tasks = tasks.filter(val => val != null);\n    const nextKey = keyIterator(tasks);\n    const nextThunk = () => {\n        const key = nextKey.next();\n        let thunk = tasks[key];\n        // eslint-disable-next-line prefer-spread\n        if (Array.isArray(thunk))\n            // eslint-disable-next-line prefer-spread\n            thunk = parallel.apply(null, thunk).call(null, each);\n        return [+key, thunk]; // convert `key` to number\n    };\n    let key, thunk;\n    let next = nextThunk();\n    key = next[0];\n    thunk = next[1];\n    if (thunk == null) return cb(null);\n\n    const ret = [];\n    const iterator = () => {\n        thunk((err, ...args) => {\n            if (args.length <= 1) args = args[0];\n            if (isFunction(each)) each.call(null, err, args, key);\n\n            if (err) cb(err);\n            else {\n                // collect result\n                ret.push(args);\n\n                next = nextThunk();\n                key = next[0];\n                thunk = next[1];\n                if (thunk == null) return cb(null, ret);\n                // finished\n                else iterator();\n            }\n        });\n    };\n    iterator();\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport { newScript, series, noop } from \"./utils\";\n\nconst loadedScript = [];\nconst pendingScripts = {};\nlet failedScript = [];\n\nconst addCache = entry => {\n    if (loadedScript.indexOf(entry) < 0) {\n        loadedScript.push(entry);\n    }\n};\n\nconst removeFailedScript = () => {\n    if (failedScript.length > 0) {\n        failedScript.forEach(script => {\n            const node = document.querySelector(`script[src='${script}']`);\n            if (node != null) {\n                node.parentNode.removeChild(node);\n            }\n        });\n\n        failedScript = [];\n    }\n};\n\nexport function startLoadingScripts(scripts, onComplete = noop) {\n    // sequence load\n    const loadNewScript = script => {\n        const src = typeof script === \"object\" ? script.src : script;\n        if (loadedScript.indexOf(src) < 0) {\n            return taskComplete => {\n                const callbacks = pendingScripts[src] || [];\n                callbacks.push(taskComplete);\n                pendingScripts[src] = callbacks;\n                if (callbacks.length === 1) {\n                    return newScript(script)(err => {\n                        pendingScripts[src].forEach(cb => cb(err, src));\n                        delete pendingScripts[src];\n                    });\n                }\n            };\n        }\n    };\n    const tasks = scripts.map(src => {\n        if (Array.isArray(src)) {\n            return src.map(loadNewScript);\n        } else return loadNewScript(src);\n    });\n\n    series(...tasks)((err, src) => {\n        if (err) {\n            failedScript.push(src);\n        } else {\n            if (Array.isArray(src)) {\n                src.forEach(addCache);\n            } else addCache(src);\n        }\n    })(err => {\n        removeFailedScript();\n        onComplete(err);\n    });\n}\n\nconst uploaderLoader = () => WrappedComponent => {\n    class ScriptLoader extends Component {\n        static propTypes = {\n            onScriptLoaded: PropTypes.func\n        };\n\n        static defaultProps = {\n            onScriptLoaded: noop\n        };\n\n        constructor(props, context) {\n            super(props, context);\n\n            this.state = {\n                isScriptLoaded: false,\n                isScriptLoadSucceed: false\n            };\n\n            this._isMounted = false;\n        }\n\n        componentDidMount() {\n            this._isMounted = true;\n            const scripts = [\n                [\"/static/js/uploader/moxie.js\"],\n                [\"/static/js/uploader/plupload.dev.js\"],\n                [\"/static/js/uploader/i18n/zh_CN.js\"],\n                [\"/static/js/uploader/ui.js\"],\n                [\"/static/js/uploader/uploader_\" + window.policyType + \".js\"]\n            ];\n            startLoadingScripts(scripts, err => {\n                if (this._isMounted) {\n                    this.setState(\n                        {\n                            isScriptLoaded: true,\n                            isScriptLoadSucceed: !err\n                        },\n                        () => {\n                            if (!err) {\n                                this.props.onScriptLoaded();\n                            }\n                        }\n                    );\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n\n        // getWrappedInstance() {\n        //     return this.refs.wrappedInstance;\n        // }\n\n        render() {\n            const props = {\n                ...this.props,\n                ...this.state,\n                ref: \"wrappedInstance\"\n            };\n\n            return <WrappedComponent {...props} />;\n        }\n    }\n\n    return hoistStatics(ScriptLoader, WrappedComponent);\n};\n\nexport default uploaderLoader;\n","import React, { Component } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { isWidthDown } from \"@material-ui/core/withWidth\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport {\n    withStyles,\n    Dialog,\n    ListItemText,\n    ListItem,\n    List,\n    Divider,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Slide,\n    ListItemSecondaryAction,\n    withWidth,\n    DialogContent\n} from \"@material-ui/core\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport { withTheme } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    appBar: {\n        position: \"relative\"\n    },\n    flex: {\n        flex: 1\n    },\n    progressBar: {\n        marginTop: 5\n    },\n    minHight: {\n        [theme.breakpoints.up(\"sm\")]: {\n            minWidth: 500\n        },\n        padding: 0\n    },\n    dialogContent: {\n        padding: 0\n    },\n    successStatus: {\n        color: \"#4caf50\"\n    },\n    errorStatus: {\n        color: \"#ff5722\",\n        wordBreak: \"break-all\"\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20\n    },\n    delete: {\n        zIndex: 9\n    },\n    progressContainer: {\n        position: \"relative\"\n    },\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0\n    },\n    fileName: {\n        wordBreak: \"break-all\"\n    }\n});\nclass FileList extends Component {\n    state = {\n        open: false,\n        files: []\n    };\n\n    //入队\n    enQueue(files) {\n        this.setState({\n            files: [...this.state.files, ...files]\n        });\n    }\n\n    deQueue(file) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow.splice(fileID, 1);\n            this.setState({\n                files: filesNow,\n                open: filesNow.length !== 0\n            });\n        }\n    }\n\n    updateStatus(file) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (!file.errMsg || file.ignoreMsg) {\n            if (filesNow[fileID] && filesNow[fileID].status !== 4) {\n                filesNow[fileID] = file;\n                this.setState({\n                    files: filesNow\n                });\n            }\n        } else {\n            file.ignoreMsg = true;\n        }\n    }\n\n    setComplete(file) {\n        console.log(\"setComplete\");\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            if (filesNow[fileID].status !== 4) {\n                filesNow[fileID].status = 5;\n                this.setState({\n                    files: filesNow\n                });\n            }\n        }\n    }\n\n    setError(file, errMsg) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow[fileID].status = 4;\n            filesNow[fileID].errMsg = errMsg;\n        } else {\n            file.status = 4;\n            file.errMsg = errMsg;\n            filesNow.push(file);\n        }\n        this.setState({\n            files: filesNow\n        });\n    }\n\n    Transition(props) {\n        return <Slide direction=\"up\" {...props} />;\n    }\n    openFileList = () => {\n        if (!this.state.open) {\n            this.setState({ open: true });\n        }\n    };\n\n    cancelUpload = file => {\n        this.props.cancelUpload(file);\n        this.deQueue(file);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    addNewFile = () => {\n        document.getElementsByClassName(\"uploadFileForm\")[0].click();\n    };\n\n    getProgressBackground = () => {\n        return this.props.theme.palette.type === \"light\"\n            ? lighten(this.props.theme.palette.primary.main, 0.8)\n            : darken(this.props.theme.palette.background.paper, 0.2);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { width } = this.props;\n\n        this.props.inRef({\n            openFileList: this.openFileList.bind(this),\n            enQueue: this.enQueue.bind(this),\n            updateStatus: this.updateStatus.bind(this),\n            setComplete: this.setComplete.bind(this),\n            setError: this.setError.bind(this)\n        });\n\n        return (\n            <Dialog\n                fullScreen={isWidthDown(\"sm\", width)}\n                open={this.state.open}\n                onClose={this.handleClose}\n                TransitionComponent={this.Transition}\n            >\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={this.handleClose}\n                            aria-label=\"Close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            className={classes.flex}\n                        >\n                            上传队列\n                        </Typography>\n                        <IconButton color=\"inherit\" onClick={this.addNewFile}>\n                            <AddIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.dialogContent}>\n                    <List className={classes.minHight}>\n                        {this.state.files.map((item, i) => (\n                            <div key={i} className={classes.progressContainer}>\n                                {item.status === 2 && (\n                                    <div\n                                        style={{\n                                            backgroundColor: this.getProgressBackground(),\n                                            width: item.percent + \"%\"\n                                        }}\n                                        className={classes.progress}\n                                    />\n                                )}\n                                <ListItem\n                                    className={classes.progressContent}\n                                    button\n                                >\n                                    <TypeIcon fileName={item.name} isUpload />\n                                    {item.status === 1 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={<div>排队中...</div>}\n                                        />\n                                    )}\n                                    {item.status === 2 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div>\n                                                    {item.percent <= 99 && (\n                                                        <>\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.speed\n                                                                )\n                                                                .toUpperCase()}\n                                                            /s 已上传{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.loaded\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            , 共{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.size\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            - {item.percent}%{\" \"}\n                                                        </>\n                                                    )}\n                                                    {item.percent > 99 && (\n                                                        <div>处理中...</div>\n                                                    )}\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 3 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={item.status}\n                                        />\n                                    )}\n                                    {item.status === 4 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.errorStatus\n                                                    }\n                                                >\n                                                    {item.errMsg}\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 5 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.successStatus\n                                                    }\n                                                >\n                                                    已完成\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    <ListItemSecondaryAction\n                                        className={classes.delete}\n                                    >\n                                        <IconButton\n                                            aria-label=\"Delete\"\n                                            onClick={() =>\n                                                this.cancelUpload(item)\n                                            }\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider />\n                            </div>\n                        ))}\n                    </List>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\nFileList.propTypes = {};\n\nexport default withStyles(styles)(withWidth()(withTheme(FileList)));\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { makeStyles, Badge } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport {\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    toggleSnackbar\n} from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { FolderUpload, FilePlus } from \"mdi-material-ui\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7\n    },\n    \"@global\": {\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\n            width: 100\n        }\n    }\n}));\n\nexport default function UploadButton(props) {\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const OpenNewFolderDialog = useCallback(\n        () => dispatch(openCreateFolderDialog()),\n        [dispatch]\n    );\n    const OpenNewFileDialog = useCallback(\n        () => dispatch(openCreateFileDialog()),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const openUpload = id => {\n        const uploadButton = document.getElementsByClassName(id)[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"上传组件还未加载完成\", \"warning\");\n        }\n    };\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                openUpload(\"uploadFileForm\");\n            }\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <AutoHidden enable>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    ariaLabel=\"SpeedDial openIcon example\"\n                    hidden={false}\n                    tooltipTitle=\"上传文件\"\n                    icon={\n                        <SpeedDialIcon\n                            openIcon={\n                                !statusHelper.isMobile() && <PublishIcon />\n                            }\n                        />\n                    }\n                    onClose={handleClose}\n                    FabProps={{\n                        onClick: () =>\n                            !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\"\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                >\n                    {statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFile\"\n                            icon={<PublishIcon />}\n                            tooltipOpen\n                            tooltipTitle=\"上传文件\"\n                            onClick={() => uploadClicked()}\n                            title={\"上传文件\"}\n                        />\n                    )}\n                    {!statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFolder\"\n                            icon={<FolderUpload />}\n                            tooltipOpen\n                            tooltipTitle=\"上传目录\"\n                            onClick={() => openUpload(\"uploadFolderForm\")}\n                            title={\"上传目录\"}\n                        />\n                    )}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipOpen\n                        tooltipTitle=\"新建目录\"\n                        onClick={() => OpenNewFolderDialog()}\n                        title={\"新建目录\"}\n                    />\n                    <SpeedDialAction\n                        key=\"NewFile\"\n                        icon={<FilePlus />}\n                        tooltipOpen\n                        tooltipTitle=\"新建文件\"\n                        onClick={() => OpenNewFileDialog()}\n                        title={\"新建文件\"}\n                    />\n                </SpeedDial>\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React, { Component } from \"react\";\nimport uploaderLoader from \"../../loader\";\nimport { connect } from \"react-redux\";\nimport { refreshFileList, refreshStorage, toggleSnackbar } from \"../../actions\";\nimport FileList from \"./FileList.js\";\nimport Auth from \"../../middleware/Auth\";\nimport UploadButton from \"../Dial/Create.js\";\nimport { basename, pathJoin } from \"../../utils\";\n\nlet loaded = false;\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        keywords: state.explorer.keywords\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass UploaderComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            queued: 0\n        };\n    }\n\n    setRef(val) {\n        window.fileList = val;\n    }\n\n    cancelUpload(file) {\n        this.uploader.removeFile(file);\n    }\n\n    getChunkSize(policyType) {\n        if (policyType === \"qiniu\") {\n            return 4 * 1024 * 1024;\n        }\n        if (policyType === \"onedrive\") {\n            return 100 * 1024 * 1024;\n        }\n        return 0;\n    }\n\n    fileAdd = (up, files) => {\n        const path = window.currntPath ? window.currntPath : this.props.path;\n        if (\n            this.props.keywords === \"\" &&\n            window.location.pathname.toLowerCase().startsWith(\"/home\")\n        ) {\n            window.fileList[\"openFileList\"]();\n            const enqueFiles = files\n                // 不上传Mac下的布局文件 .DS_Store\n                .filter(file => {\n                    const isDsStore = file.name.toLowerCase() === \".ds_store\";\n                    if (isDsStore) {\n                        up.removeFile(file);\n                    }\n                    return !isDsStore;\n                })\n                .map(file => {\n                    const source = file.getSource();\n                    if (source.relativePath && source.relativePath !== \"\") {\n                        file.path = basename(\n                            pathJoin([path, source.relativePath])\n                        );\n                        window.pathCache[file.id] = basename(\n                            pathJoin([path, source.relativePath])\n                        );\n                    } else {\n                        window.pathCache[file.id] = path;\n                        file.path = path;\n                    }\n                    return file;\n                });\n            window.fileList[\"enQueue\"](enqueFiles);\n        } else {\n            window.plupload.each(files, files => {\n                up.removeFile(files);\n            });\n        }\n    };\n\n    UNSAFE_componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\n        if (isScriptLoaded && !this.props.isScriptLoaded) {\n            // load finished\n            if (isScriptLoadSucceed) {\n                if (loaded) {\n                    return;\n                }\n                loaded = true;\n                const user = Auth.GetUser();\n                this.uploader = window.Qiniu.uploader({\n                    runtimes: \"html5\",\n                    browse_button: [\"pickfiles\", \"pickfolder\"],\n                    container: \"container\",\n                    drop_element: \"container\",\n                    max_file_size:\n                        user.policy.maxSize === \"0.00mb\"\n                            ? 0\n                            : user.policy.maxSize,\n                    dragdrop: true,\n                    chunk_size: this.getChunkSize(user.policy.saveType),\n                    filters: {\n                        mime_types:\n                            user.policy.allowedType === null ||\n                            user.policy.allowedType.length === 0\n                                ? []\n                                : [\n                                      {\n                                          title: \"files\",\n                                          extensions: user.policy.allowedType.join(\n                                              \",\"\n                                          )\n                                      }\n                                  ]\n                    },\n                    // iOS不能多选？\n                    multi_selection: true,\n                    uptoken_url: \"/api/v3/file/upload/credential\",\n                    uptoken: user.policy.saveType === \"local\" ? \"token\" : null,\n                    domain: \"s\",\n                    max_retries: 0,\n                    get_new_uptoken: true,\n                    auto_start: true,\n                    log_level: 5,\n                    init: {\n                        FilesAdded: this.fileAdd,\n\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        BeforeUpload: function() {},\n                        QueueChanged: up => {\n                            this.setState({ queued: up.total.queued });\n                        },\n                        UploadProgress: (up, file) => {\n                            window.fileList[\"updateStatus\"](file);\n                        },\n                        UploadComplete: (up, file) => {\n                            if (file.length === 0) {\n                                return;\n                            }\n                            console.log(\n                                \"UploadComplete\",\n                                file[0].status,\n                                file[0]\n                            );\n                            for (let i = 0; i < file.length; i++) {\n                                if (file[i].status === 5) {\n                                    window.fileList[\"setComplete\"](file[i]);\n                                }\n                            }\n                            // 无异步操作的策略，直接刷新\n                            if (\n                                user.policy.saveType !== \"onedrive\" &&\n                                user.policy.saveType !== \"cos\"\n                            ) {\n                                this.props.refreshFileList();\n                                this.props.refreshStorage();\n                            }\n                        },\n                        Fresh: () => {\n                            this.props.refreshFileList();\n                            this.props.refreshStorage();\n                        },\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        FileUploaded: function() {},\n                        Error: (up, err, errTip) => {\n                            window.fileList[\"openFileList\"]();\n                            window.fileList[\"setError\"](err.file, errTip);\n                        },\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        FilesRemoved: () => {}\n                    }\n                });\n                // this.fileList[\"openFileList\"]();\n            } else this.onError();\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onError() {}\n\n    openFileList = () => {\n        window.fileList[\"openFileList\"]();\n    };\n\n    render() {\n        return (\n            <div>\n                <FileList\n                    inRef={this.setRef.bind(this)}\n                    cancelUpload={this.cancelUpload.bind(this)}\n                />\n                {this.props.keywords === \"\" && (\n                    <UploadButton\n                        Queued={this.state.queued}\n                        openFileList={this.openFileList}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nconst Uploader = connect(mapStateToProps, mapDispatchToProps, null, {\n    forwardRef: true\n})(uploaderLoader()(UploaderComponent));\n\nexport default Uploader;\n","export const imgPreviewSuffix = [\n    \"bmp\",\n    \"png\",\n    \"gif\",\n    \"jpg\",\n    \"jpeg\",\n    \"svg\",\n    \"webp\"\n];\nexport const msDocPreviewSuffix = [\n    \"ppt\",\n    \"pptx\",\n    \"pps\",\n    \"doc\",\n    \"docx\",\n    \"xlsx\",\n    \"xls\"\n];\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\"];\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\"];\nexport const pdfPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\", \"txt\"];\nexport const codePreviewSuffix = {\n    json: \"json\",\n    php: \"php\",\n    bat: \"bat\",\n    cpp: \"cpp\",\n    c: \"cpp\",\n    h: \"cpp\",\n    cs: \"csharp\",\n    css: \"css\",\n    dockerfile: \"dockerfile\",\n    go: \"go\",\n    html: \"html\",\n    ini: \"ini\",\n    java: \"java\",\n    js: \"javascript\",\n    jsx: \"javascript\",\n    less: \"less\",\n    lua: \"lua\",\n    sh: \"shell\",\n    sql: \"sql\",\n    xml: \"xml\",\n    yaml: \"yaml\"\n};\nexport const mediaType = {\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\"],\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\n    pdf: [\"pdf\"],\n    word: [\"doc\", \"docx\"],\n    ppt: [\"ppt\", \"pptx\"],\n    excel: [\"xls\", \"xlsx\", \"csv\"],\n    text: [\"txt\", \"md\", \"html\"],\n    torrent: [\"torrent\"],\n    zip: [\"zip\", \"gz\", \"tar\", \"rar\", \"7z\"],\n    excute: [\"exe\"],\n    android: [\"apk\"],\n    php: [\"php\"],\n    go: [\"go\"],\n    python: [\"py\"],\n    cpp: [\"cpp\"],\n    c: [\"c\"],\n    js: [\"js\", \"jsx\"]\n};\nexport const policyTypeMap = {\n    local: \"本机\",\n    remote: \"从机\",\n    qiniu: \"七牛\",\n    upyun: \"又拍云\",\n    oss: \"阿里云 OSS\",\n    cos: \"腾讯云\",\n    onedrive: \"OneDrive\",\n    s3: \"Amazon S3\"\n};\nexport const isPreviewable = name => {\n    const suffix = name\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"img\";\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"msDoc\";\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"audio\";\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"video\";\n    } else if (editSuffix.indexOf(suffix) !== -1) {\n        return \"edit\";\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"pdf\";\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\n        return \"code\";\n    }\n    return false;\n};\nexport const isTorrent = name => {\n    const suffix = name\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\n        return true;\n    }\n    return false;\n};\n\nexport const isCompressFile = name => {\n    const suffix = name\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    return suffix === \"zip\";\n};\n\nconst taskStatus = [\"排队中\", \"处理中\", \"失败\", \"取消\", \"已完成\"];\nconst taskType = [\"压缩\", \"解压缩\", \"文件中转\", \"导入外部目录\"];\nconst taskProgress = [\n    \"等待中\",\n    \"压缩中\",\n    \"解压缩中\",\n    \"下载中\",\n    \"转存中\",\n    \"索引中\",\n    \"插入中\"\n];\n\nexport const getTaskStatus = status => {\n    return taskStatus[status];\n};\n\nexport const getTaskType = status => {\n    return taskType[status];\n};\n\nexport const getTaskProgress = (type, status) => {\n    if (type === 2) {\n        return \"已完成 \" + (status + 1) + \" 个文件\";\n    }\n    return taskProgress[status];\n};\n","import { isMac } from \"../utils\";\n\nexport const removeSelectedTargets = fileIds => {\n    return {\n        type: \"RMOVE_SELECTED_TARGETS\",\n        fileIds\n    };\n};\n\nexport const addSelectedTargets = targets => {\n    return {\n        type: \"ADD_SELECTED_TARGETS\",\n        targets\n    };\n};\n\nexport const setSelectedTarget = targets => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets\n    };\n};\n\nexport const setLastSelect = (file, index) => {\n    return {\n        type: \"SET_LAST_SELECT\",\n        file,\n        index\n    };\n};\n\nexport const setShiftSelectedIds = shiftSelectedIds => {\n    return {\n        type: \"SET_SHIFT_SELECTED_IDS\",\n        shiftSelectedIds\n    };\n};\n\nexport const selectFile = (file, event, fileIndex) => {\n    const { ctrlKey, metaKey, shiftKey } = event;\n    return (dispatch, getState) => {\n        // 多种组合操作忽略\n        if ([ctrlKey, metaKey, shiftKey].filter(Boolean).length > 1) {\n            return;\n        }\n        const isMacbook = isMac();\n        const { explorer } = getState();\n        const { selected, lastSelect, dirList, fileList } = explorer;\n        if (\n            shiftKey &&\n            !ctrlKey &&\n            !metaKey &&\n            selected.length !== 0 &&\n            // 点击类型一样\n            file.type === lastSelect.file.type\n        ) {\n            // shift 多选\n            // 取消原有选择\n            dispatch(removeSelectedTargets(selected.map(v => v.id)));\n            // 添加新选择\n            const begin = Math.min(lastSelect.index, fileIndex);\n            const end = Math.max(lastSelect.index, fileIndex);\n            const list = file.type === \"dir\" ? dirList : fileList;\n            const newShiftSelected = list.slice(begin, end + 1);\n            return dispatch(addSelectedTargets(newShiftSelected));\n        }\n        dispatch(setLastSelect(file, fileIndex));\n        dispatch(setShiftSelectedIds([]));\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\n            // Ctrl/Command 单击添加/删除\n            const presentIndex = selected.findIndex(value => {\n                return value.id === file.id;\n            });\n            if (presentIndex !== -1) {\n                return dispatch(removeSelectedTargets([file.id]));\n            }\n            return dispatch(addSelectedTargets([file]));\n        }\n        // 单选\n        return dispatch(setSelectedTarget([file]));\n    };\n};\n","export * from \"./explorer\";\n\nexport const setNavigator = (path, navigatorLoading) => {\n    return {\n        type: \"SET_NAVIGATOR\",\n        path,\n        navigatorLoading\n    };\n};\n\nexport const navigateTo = path => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const navigatorLoading = path !== state.navigator.path;\n        dispatch(setNavigator(path, navigatorLoading));\n    };\n};\n\nexport const navigateUp = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const pathSplit = state.navigator.path.split(\"/\");\n        pathSplit.pop();\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\n        const navigatorLoading = newPath !== state.navigator.path;\n        dispatch(setNavigator(newPath, navigatorLoading));\n    };\n};\n\nexport const drawerToggleAction = open => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open\n    };\n};\n\nexport const dragAndDrop = (source, target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target\n    };\n};\n\nexport const changeViewMethod = method => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method\n    };\n};\n\nexport const toggleDaylightMode = () => {\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\"\n    };\n};\n\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open\n    };\n};\n\nexport const setNavigatorLoadingStatus = status => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status\n    };\n};\n\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg\n    };\n};\n\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\"\n    };\n};\n\nexport const openCreateFileDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FILE_DIALOG\"\n    };\n};\n\nexport const setUserPopover = anchor => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor\n    };\n};\n\nexport const setShareUserPopover = anchor => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor\n    };\n};\n\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\"\n    };\n};\n\nexport const openResaveDialog = key => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key: key\n    };\n};\n\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\"\n    };\n};\n\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\"\n    };\n};\n\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\"\n    };\n};\n\nexport const applyThemes = theme => {\n    return {\n        type: \"APPLY_THEME\",\n        theme: theme\n    };\n};\n\nexport const setSessionStatus = status => {\n    return {\n        type: \"SET_SESSION_STATUS\",\n        status: status\n    };\n};\n\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\"\n    };\n};\n\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\"\n    };\n};\n\nexport const openTorrentDownloadDialog = () => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\"\n    };\n};\n\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\"\n    };\n};\n\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\"\n    };\n};\n\nexport const openGetSourceDialog = () => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\"\n    };\n};\n\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\"\n    };\n};\n\nexport const openLoadingDialog = text => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text\n    };\n};\n\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\"\n    };\n};\n\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color\n    };\n};\n\nexport const enableLoadUploader = () => {\n    return {\n        type: \"ENABLE_LOAD_UPLOADER\"\n    };\n};\n\nexport const setModalsLoading = status => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status\n    };\n};\n\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\"\n    };\n};\n\nexport const searchMyFile = keywords => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords\n    };\n};\n\nexport const showImgPreivew = first => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first\n    };\n};\n\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\"\n    };\n};\n\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\"\n    };\n};\n\nexport const setSiteConfig = config => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config\n    };\n};\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox,\n    LanguageC,\n    LanguageCpp,\n    LanguageGo,\n    LanguageJavascript,\n    LanguagePhp,\n    LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo\n    },\n    python: {\n        color: \"#3776ab\",\n        icon: LanguagePython\n    },\n    c: {\n        color: \"#a8b9cc\",\n        icon: LanguageC\n    },\n    cpp: {\n        color: \"#004482\",\n        icon: LanguageCpp\n    },\n    js: {\n        color: \"#f4d003\",\n        icon: LanguageJavascript\n    }\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = props => {\n    const theme = useTheme();\n\n    const fileSuffix = props.fileName\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach(k => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    const IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color\n                    }}\n                >\n                    <IconComponent\n                        style={{\n                            color: theme.palette.background.paper\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        fontSize: \"160px\"\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled, 0.4)\n    }\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst MyLoader = () => (\n    <ContentLoader\n        height={80}\n        width={200}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#e4e4e4\"\n    >\n        <rect x=\"4\" y=\"4\" rx=\"7\" ry=\"7\" width=\"392\" height=\"116\" />\n    </ContentLoader>\n);\n\nfunction captchaPlacholder() {\n    return <MyLoader />;\n}\n\nexport default captchaPlacholder;\n","import {\n    setSiteConfig,\n    toggleSnackbar,\n    enableLoadUploader,\n    changeViewMethod\n} from \"../actions/index\";\nimport API from \"./Api\";\nimport Auth from \"./Auth\";\nimport pathHelper from \"../utils/page\";\n\nconst initUserConfig = siteConfig => {\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\n        const themes = JSON.parse(siteConfig.themes);\n        const user = siteConfig.user;\n        delete siteConfig.user;\n\n        //更换用户自定配色\n        if (\n            user[\"preferred_theme\"] !== \"\" &&\n            themes[user[\"preferred_theme\"]] !== undefined\n        ) {\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig;\n};\n\nexport const InitSiteConfig = rawStore => {\n    // 从缓存获取默认配置\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache;\n    }\n    // 检查是否有path参数\n    const url = new URL(window.location.href);\n    const c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c === null ? \"/\" : c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n    return rawStore;\n};\n\nexport function enableUploaderLoad() {\n    // 开启上传组件加载\n    const user = Auth.GetUser();\n    window.policyType = user !== null ? user.policy.saveType : \"local\";\n    window.uploadConfig = user !== null ? user.policy : {};\n    window.pathCache = [];\n}\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\")\n        .then(function(response) {\n            const themes = JSON.parse(response.data.themes);\n            response.data.theme = themes[response.data.defaultTheme];\n            response.data = initUserConfig(response.data);\n            store.dispatch(setSiteConfig(response.data));\n            localStorage.setItem(\n                \"siteConfigCache\",\n                JSON.stringify(response.data)\n            );\n\n            // 偏爱的列表样式\n            const preferListMethod = Auth.GetPreference(\"view_method\");\n            if (preferListMethod) {\n                store.dispatch(changeViewMethod(preferListMethod));\n            } else {\n                if (pathHelper.isSharePage(window.location.pathname)) {\n                    store.dispatch(\n                        changeViewMethod(response.data.share_view_method)\n                    );\n                } else {\n                    store.dispatch(\n                        changeViewMethod(response.data.home_view_method)\n                    );\n                }\n            }\n        })\n        .catch(function(error) {\n            store.dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载站点配置：\" + error.message,\n                    \"error\"\n                )\n            );\n        })\n        .then(function() {\n            enableUploaderLoad(store);\n            store.dispatch(enableLoadUploader());\n        });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (\n            this.props.grecaptcha &&\n            this.props.grecaptcha.render &&\n            this._widgetId === undefined\n        ) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (\n            this._executeRequested &&\n            this.props.grecaptcha &&\n            this._widgetId !== undefined\n        ) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"])\n};\nReCAPTCHA.defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\"\n};\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName\n})(ReCAPTCHA);\n","import { Link, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport pageHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(() => ({\n    icp: {\n        padding: \"8px 24px\",\n        position: \"absolute\",\n        bottom: 0\n    }\n}));\n\nexport const ICPFooter = () => {\n    const siteICPId = useSelector(state => state.siteConfig.siteICPId);\n    const classes = useStyles();\n    const location = useLocation();\n    const [show, setShow] = useState(true);\n\n    useEffect(() => {\n        // 只在分享和登录界面显示\n        const isSharePage = pageHelper.isSharePage(location.pathname);\n        const isLoginPage = pageHelper.isLoginPage(location.pathname);\n        setShow(siteICPId && (isSharePage || isLoginPage));\n    }, [siteICPId, location]);\n\n    if (!show) {\n        return <></>;\n    }\n    return (\n        <div className={classes.icp}>\n            {`备案号: `}\n            <Link\n                href=\"https://beian.miit.gov.cn/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                {siteICPId}\n            </Link>\n        </div>\n    );\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    applyThemes,\n    setSessionStatus\n} from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\nimport { enableUploaderLoad } from \"../../middleware/Init\";\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useLocation } from \"react-router\";\nimport ReCaptcha from \"./ReCaptcha\";\nimport { ICPFooter } from \"../Common/ICPFooter\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\"\n        }\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    buttonContainer: {\n        display: \"flex\"\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [captcha, setCaptcha] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [captchaData, setCaptchaData] = useState(null);\n    const [twoFA, setTwoFA] = useState(false);\n    const [faCode, setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector(state => state.siteConfig.loginCaptcha);\n    const title = useSelector(state => state.siteConfig.title);\n    const authn = useSelector(state => state.siteConfig.authn);\n    const useReCaptcha = useSelector(\n        state => state.siteConfig.captcha_IsUseReCaptcha\n    );\n    const reCaptchaKey = useSelector(\n        state => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback(theme => dispatch(applyThemes(theme)), [\n        dispatch\n    ]);\n    const SetSessionStatus = useCallback(\n        status => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const query = useQuery();\n\n    const classes = useStyles();\n\n    const refreshCaptcha = useCallback(() => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    }, []);\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n        if (loginCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n    }, [location, loginCaptcha]);\n\n    const afterLogin = data => {\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n        enableUploaderLoad();\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        history.push(\"/home\");\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    const authnLogin = e => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then(response => {\n                const credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function(listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    }\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey\n                });\n            })\n            .then(assertion => {\n                const authData = assertion.response.authenticatorData;\n                const clientDataJSON = assertion.response.clientDataJSON;\n                const rawId = assertion.rawId;\n                const sig = assertion.response.signature;\n                const userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle)\n                        }\n                    })\n                );\n            })\n            .then(response => {\n                afterLogin(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const login = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            captchaCode: captcha\n        })\n            .then(response => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setTwoFA(true);\n                } else {\n                    afterLogin(response.data);\n                }\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    const twoFALogin = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\", {\n            code: faCode\n        })\n            .then(response => {\n                setLoading(false);\n                afterLogin(response.data);\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA && (\n                <>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            登录 {title}\n                        </Typography>\n                        {!useAuthn && (\n                            <form className={classes.form} onSubmit={login}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={e => setEmail(e.target.value)}\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"password\">\n                                        密码\n                                    </InputLabel>\n                                    <Input\n                                        name=\"password\"\n                                        onChange={e => setPwd(e.target.value)}\n                                        type=\"password\"\n                                        id=\"password\"\n                                        value={pwd}\n                                        autoComplete\n                                    />\n                                </FormControl>\n                                {loginCaptcha && !useReCaptcha && (\n                                    <div className={classes.captchaContainer}>\n                                        <FormControl\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                        >\n                                            <InputLabel htmlFor=\"captcha\">\n                                                验证码\n                                            </InputLabel>\n                                            <Input\n                                                name=\"captcha\"\n                                                onChange={e =>\n                                                    setCaptcha(e.target.value)\n                                                }\n                                                type=\"text\"\n                                                id=\"captcha\"\n                                                value={captcha}\n                                                autoComplete\n                                            />\n                                        </FormControl>{\" \"}\n                                        <div>\n                                            {captchaData === null && (\n                                                <div\n                                                    className={\n                                                        classes.captchaPlaceholder\n                                                    }\n                                                >\n                                                    <Placeholder />\n                                                </div>\n                                            )}\n                                            {captchaData !== null && (\n                                                <img\n                                                    src={captchaData}\n                                                    alt=\"captcha\"\n                                                    onClick={refreshCaptcha}\n                                                />\n                                            )}\n                                        </div>\n                                    </div>\n                                )}\n\n                                {loginCaptcha && useReCaptcha && (\n                                    <div className={classes.captchaContainer}>\n                                        <FormControl\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                        >\n                                            <div>\n                                                <ReCaptcha\n                                                    style={{\n                                                        display: \"inline-block\"\n                                                    }}\n                                                    sitekey={reCaptchaKey}\n                                                    onChange={value =>\n                                                        setCaptcha(value)\n                                                    }\n                                                    id=\"captcha\"\n                                                    name=\"captcha\"\n                                                />\n                                            </div>\n                                        </FormControl>{\" \"}\n                                    </div>\n                                )}\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                >\n                                    登录\n                                </Button>\n                            </form>\n                        )}\n                        {useAuthn && (\n                            <form className={classes.form}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={e => setEmail(e.target.value)}\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    onClick={authnLogin}\n                                    className={classes.submit}\n                                >\n                                    下一步\n                                </Button>\n                            </form>\n                        )}\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/signup\"}>注册账号</Link>\n                            </div>\n                        </div>\n\n                        <ICPFooter />\n                    </Paper>\n\n                    {authn && (\n                        <div className={classes.authnLink}>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setUseAuthn(!useAuthn)}\n                            >\n                                {!useAuthn && (\n                                    <>\n                                        <Fingerprint\n                                            style={{\n                                                marginRight: 8\n                                            }}\n                                        />\n                                        使用外部验证器登录\n                                    </>\n                                )}\n                                {useAuthn && (\n                                    <>\n                                        <VpnKey\n                                            style={{\n                                                marginRight: 8\n                                            }}\n                                        />\n                                        使用密码登录\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    )}\n                </>\n            )}\n            {twoFA && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <VpnIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        二步验证\n                    </Typography>\n                    <form className={classes.form} onSubmit={twoFALogin}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"code\">\n                                请输入六位二步验证代码\n                            </InputLabel>\n                            <Input\n                                id=\"code\"\n                                type=\"number\"\n                                name=\"code\"\n                                onChange={event =>\n                                    setFACode(event.target.value)\n                                }\n                                autoComplete\n                                value={faCode}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            继续登录\n                        </Button>{\" \"}\n                    </form>{\" \"}\n                    <Divider />\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { withStyles, ButtonBase, Typography, Tooltip } from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport { lighten } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass SmallIconCompoment extends Component {\n    state = {};\n\n    render() {\n        const { classes } = this.props;\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <ButtonBase\n                focusRipple\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected\n                    },\n                    classes.button\n                )}\n            >\n                <div\n                    className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected\n                    })}\n                >\n                    <TypeIcon fileName={this.props.file.name} />\n                </div>\n                <Tooltip\n                    title={this.props.file.name}\n                    aria-label={this.props.file.name}\n                >\n                    <Typography\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                        variant=\"body2\"\n                    >\n                        {this.props.file.name}\n                    </Typography>\n                </Tooltip>\n            </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SmallIconCompoment));\n\nexport default SmallIcon;\n","import {\n    ButtonBase,\n    Divider,\n    Tooltip,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { baseURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\n\nconst styles = theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\"\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"6px 6px 0 0\",\n        backgroundColor: theme.palette.background.default\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"5px 5px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\"\n    },\n    iconBig: {\n        fontSize: 50\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\"\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary\n    },\n    hide: {\n        display: \"none\"\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n        height: \"100%\",\n        width: \"100%\"\n    },\n    shareFix: {\n        marginLeft: \"20px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected\n                        },\n                        classes.button\n                    )}\n                >\n                    {this.props.file.pic !== \"\" &&\n                        !this.state.showPicIcon &&\n                        this.props.file.pic !== \" \" &&\n                        this.props.file.pic !== \"null,null\" && (\n                            <div className={classes.preview}>\n                                <LazyLoadImage\n                                    className={classNames({\n                                        [classes.hide]: this.state.loading,\n                                        [classes.picPreview]: !this.state\n                                            .loading\n                                    })}\n                                    src={\n                                        baseURL +\n                                        (isSharePage\n                                            ? \"/share/thumb/\" +\n                                              window.shareInfo.key +\n                                              \"/\" +\n                                              this.props.file.id +\n                                              \"?path=\" +\n                                              encodeURIComponent(\n                                                  this.props.file.path\n                                              )\n                                            : \"/file/thumb/\" +\n                                              this.props.file.id)\n                                    }\n                                    afterLoad={() =>\n                                        this.setState({ loading: false })\n                                    }\n                                    beforeLoad={() =>\n                                        this.setState({ loading: true })\n                                    }\n                                    onError={() =>\n                                        this.setState({ showPicIcon: true })\n                                    }\n                                />\n                                <ContentLoader\n                                    height={150}\n                                    width={170}\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: !this.state.loading\n                                        },\n                                        classes.loadingAnimation\n                                    )}\n                                >\n                                    <rect\n                                        x=\"0\"\n                                        y=\"0\"\n                                        width=\"100%\"\n                                        height=\"150\"\n                                    />\n                                </ContentLoader>\n                            </div>\n                        )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && <Divider />}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected\n                                })}\n                            >\n                                <TypeIcon fileName={this.props.file.name} />\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]: !isSelected,\n                                    [classes.shareFix]: this.props.share\n                                })}\n                            >\n                                {this.props.file.name}\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n    dragging: {\n        width: \"200px\"\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\"\n    }\n}));\n\nconst diliverIcon = (object, viewMethod, classes) => {\n    return (\n        <>\n            {object.type === \"dir\" && viewMethod !== \"list\" && (\n                <div className={classes.dragging}>\n                    <SmallIcon file={object} />\n                </div>\n            )}\n            {object.type === \"file\" && viewMethod === \"icon\" && (\n                <div className={classes.dragging}>\n                    <FileIcon file={object} />\n                </div>\n            )}\n            {object.type === \"file\" && viewMethod === \"smallIcon\" && (\n                <div className={classes.dragging}>\n                    <SmallIcon file={object} />\n                </div>\n            )}\n        </>\n    );\n};\n\nconst Preview = props => {\n    const selected = useSelector(state => state.explorer.selected);\n    const viewMethod = useSelector(\n        state => state.viewUpdate.explorerViewMethod\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 &&\n                diliverIcon(props.object, viewMethod, classes)}\n            {selected.length > 0 && (\n                <>\n                    {selected.slice(0, 3).map((card, i) => (\n                        <div\n                            key={card.id}\n                            className={classes.cardDragged}\n                            style={{\n                                zIndex: selected.length - i,\n                                transform: `rotateZ(${-i * 2.5}deg)`\n                            }}\n                        >\n                            {diliverIcon(card, viewMethod, classes)}\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\nexport default Preview;\n","import React from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport Preview from \"./Preview\";\nconst layerStyles = {\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\"\n};\nfunction snapToGrid(x, y) {\n    const snappedX = Math.round(x / 32) * 32;\n    const snappedY = Math.round(y / 32) * 32;\n    return [snappedX, snappedY];\n}\nfunction getItemStyles(initialOffset, currentOffset, isSnapToGrid) {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: \"none\"\n        };\n    }\n    let { x, y } = currentOffset;\n    if (isSnapToGrid) {\n        x -= initialOffset.x;\n        y -= initialOffset.y;\n        [x, y] = snapToGrid(x, y);\n        x += initialOffset.x;\n        y += initialOffset.y;\n    }\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        transform,\n        WebkitTransform: transform,\n        opacity: y > 200 ? 1 : 0.4\n    };\n}\nconst CustomDragLayer = props => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset\n    } = useDragLayer(monitor => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging()\n    }));\n    function renderItem() {\n        switch (itemType) {\n            case \"object\":\n                return <Preview object={item.object} />;\n            default:\n                return null;\n        }\n    }\n    if (!isDragging) {\n        return null;\n    }\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialOffset,\n                    currentOffset,\n                    props.snapToGrid\n                )}\n            >\n                {renderItem()}\n            </div>\n        </div>\n    );\n};\nexport default CustomDragLayer;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\n\nexport interface ActionSetFileList extends AnyAction {\n    type: \"SET_FILE_LIST\";\n    list: CloudreveFile[];\n}\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\n    return {\n        type: \"SET_FILE_LIST\",\n        list\n    };\n};\n\nexport interface ActionSetDirList extends AnyAction {\n    type: \"SET_DIR_LIST\";\n    list: CloudreveFile[];\n}\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\n    return {\n        type: \"SET_DIR_LIST\",\n        list\n    };\n};\n\nexport interface ActionSetSortMethod extends AnyAction {\n    type: \"SET_SORT_METHOD\";\n    method: SortMethod;\n}\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\n    return {\n        type: \"SET_SORT_METHOD\",\n        method\n    };\n};\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\nconst sortMethodFuncs: Record<SortMethod, SortFunc> = {\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.size - b.size;\n    },\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.size - a.size;\n    },\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.name.localeCompare(\n            b.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.name.localeCompare(\n            a.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.date) - Date.parse(b.date);\n    },\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.date) - Date.parse(a.date);\n    }\n};\n\nexport const updateFileList = (\n    list: CloudreveFile[]\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        // TODO: define state type\n        const { sortMethod } = state.viewUpdate;\n        const dirList = list.filter(x => {\n            return x.type === \"dir\";\n        });\n        const fileList = list.filter(x => {\n            return x.type === \"file\";\n        });\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n\nexport const changeSortMethod = (\n    method: SortMethod\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { fileList, dirList } = state.explorer;\n        const sortFunc = sortMethodFuncs[method];\n        dispatch(setSortMethod(method));\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n","import * as actions from \"./action\";\nimport * as reducers from \"./reducer\";\n\nexport default {\n    actions,\n    reducers\n};\n","import {\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Archive, Unarchive } from \"@material-ui/icons\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { FolderUpload, MagnetOn, FilePlus } from \"mdi-material-ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    openCompressDialog,\n    openCreateFileDialog,\n    refreshFileList\n} from \"../../actions\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    openCopyDialog,\n    openCreateFolderDialog,\n    openDecompressDialog,\n    openGetSourceDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openRemoteDownloadDialog,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    openTorrentDownloadDialog,\n    setNavigatorLoadingStatus,\n    setSelectedTarget,\n    showImgPreivew,\n    toggleSnackbar\n} from \"../../actions/index\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport Auth from \"../../middleware/Auth\";\nimport { allowSharePreview } from \"../../utils/index\";\nimport pathHelper from \"../../utils/page\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst styles = () => ({\n    propover: {\n        minWidth: \"200px!important\"\n    },\n    divider: {\n        marginTop: 4,\n        marginBottom: 4\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        keywords: state.explorer.keywords\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: status => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: path => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownloadDialog());\n        },\n        openGetSourceDialog: () => {\n            dispatch(openGetSourceDialog());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        }\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = e => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n    //批量生成下载链接\n    openMultiLinks = ()=>{\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"批量生成中...\");\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            this.props.changeContextMenu(\"file\", false);\n            return;\n        }\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    enterFolder = () => {\n        this.props.navigateTo(\n            this.props.path === \"/\"\n                ? this.props.path + this.props.selected[0].name\n                : this.props.path + \"/\" + this.props.selected[0].name\n        );\n    };\n\n    clickUpload = id => {\n        this.props.changeContextMenu(\"empty\", false);\n        const uploadButton = document.getElementsByClassName(id)[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"上传组件还未加载完成\",\n                \"warning\"\n            );\n        }\n    };\n\n    openPreview = () => {\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                this.props.changeContextMenu(\"file\", false);\n                return;\n            }\n        }\n        this.props.changeContextMenu(\"file\", false);\n        const previewPath =\n            this.props.selected[0].path === \"/\"\n                ? this.props.selected[0].path + this.props.selected[0].name\n                : this.props.selected[0].path +\n                  \"/\" +\n                  this.props.selected[0].name;\n        switch (isPreviewable(this.props.selected[0].name)) {\n            case \"img\":\n                this.props.showImgPreivew(this.props.selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/doc?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/video?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"pdf\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/pdf?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/pdf?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/text?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"code\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/code?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/code?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            default:\n                return;\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <div>\n                            <MenuItem\n                                onClick={() => {\n                                    this.props.refreshFileList();\n                                    this.props.changeContextMenu(\n                                        this.props.menuType,\n                                        false\n                                    );\n                                }}\n                            >\n                                <ListItemIcon>\n                                    <RefreshIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">刷新</Typography>\n                            </MenuItem>\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                onClick={() =>\n                                    this.clickUpload(\"uploadFileForm\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <UploadIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传文件\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                onClick={() =>\n                                    this.clickUpload(\"uploadFolderForm\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <FolderUpload />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传目录\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        离线下载\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <ListItemIcon>\n                                    <NewFolderIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件夹\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.openCreateFileDialog()\n                                }\n                            >\n                                <ListItemIcon>\n                                    <FilePlus />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件\n                                </Typography>\n                            </MenuItem>\n                        </div>\n                    )}\n                    {/*选中的情况*/}\n                    {this.props.menuType !== \"empty\" && (\n                        <div>\n                            {!this.props.isMultiple && this.props.withFolder && (\n                                <div>\n                                    <MenuItem onClick={this.enterFolder}>\n                                        <ListItemIcon>\n                                            <OpenFolderIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            进入\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <div>\n                                        <MenuItem\n                                            onClick={() => this.openPreview()}\n                                        >\n                                            <ListItemIcon>\n                                                <OpenIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                打开\n                                            </Typography>\n                                        </MenuItem>\n                                    </div>\n                                )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <div>\n                                    <MenuItem\n                                        onClick={() => this.openDownload()}\n                                    >\n                                        <ListItemIcon>\n                                            <DownloadIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            下载\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n\n                            {(this.props.isMultiple || this.props.withFolder) &&\n                                (user.group.allowArchiveDownload ||\n                                    !isHomePage) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.openArchiveDownload()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <DownloadIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            打包下载\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {(this.props.isMultiple || this.props.withFolder) &&\n                            (user.policy.allowSource ||\n                                !isHomePage) && (\n                                <MenuItem\n                                    onClick={() =>\n                                        this.openMultiLinks()\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <LinkIcon />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        批量生成下载链接\n                                    </Typography>\n                                </MenuItem>\n                            )}\n                            {/*获取外链*/}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                isHomePage &&\n                                user.policy.allowSource && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openGetSourceDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            获取外链\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <MagnetOn />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            创建离线下载任务\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Unarchive />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            解压缩\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Archive />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建压缩文件\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建分享链接\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <div>\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <RenameIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            重命名\n                                        </Typography>\n                                    </MenuItem>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <FileCopyIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                复制\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n                                </div>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <MoveIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                移动\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <DeleteIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            删除\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ContextMenuCompoment)));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../utils/index\";\nimport { withStyles, TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\n\nconst styles = theme => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? lighten(theme.palette.background.paper, 0.15)\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary\n    },\n    tableIcon: {\n        marginRight: \"20px\",\n        verticalAlign: \"middle\"\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\"\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\"\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    tableRow: {\n        padding: \"10px 16px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        } else if (this.props.file.type === \"up\") {\n            icon = <KeyboardReturnIcon className={classes.icon} />;\n        } else {\n            icon = (\n                <TypeIcon\n                    className={classes.tableIcon}\n                    fileName={this.props.file.name}\n                />\n            );\n        }\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <TableRow\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames({\n                    [classes.selected]: isSelected && !isShare,\n                    [classes.selectedShared]: isSelected && isShare,\n                    [classes.notSelected]: !isSelected\n                })}\n            >\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.tableRow}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {icon}\n                        {this.props.file.name}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&\n                            this.props.file.type !== \"up\" &&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.date}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { ButtonBase, Typography, Tooltip, makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { lighten } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    },\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    }\n}));\n\nexport default function Folder({ folder, isActive }) {\n    const selected = useSelector(state => state.explorer.selected);\n\n    const classes = useStyles();\n\n    const isSelected =\n        selected.findIndex(value => {\n            return value === folder;\n        }) !== -1;\n\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive\n                },\n                classes.button\n            )}\n        >\n            <div\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected\n                })}\n            >\n                <FolderIcon />\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\";\nexport default function FolderDropWarpper({ folder }) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n    const isActive = canDrop && isOver;\n    return (\n        <div ref={drop}>\n            <Folder folder={folder} isActive={isActive} />\n        </div>\n    );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    changeContextMenu,\n    setSelectedTarget,\n    selectFile as selectFileAction,\n    navigateTo,\n    showImgPreivew,\n    openMusicDialog,\n    toggleSnackbar,\n    dragAndDrop,\n    openLoadingDialog\n} from \"../../actions/index\";\nimport statusHelper from \"../../utils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { isPreviewable } from \"../../config\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport { pathBack } from \"../../utils\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: \"7px\"\n    },\n    fixFlex: {\n        minWidth: 0\n    },\n    dragging: {\n        opacity: 0.4\n    }\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector(state => state.navigator.path);\n    const selected = useSelector(state => state.explorer.selected);\n    const viewMethod = useSelector(\n        state => state.viewUpdate.explorerViewMethod\n    );\n    const navigatorPath = useSelector(state => state.navigator.path);\n    const location = useLocation();\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const SetSelectedTarget = useCallback(\n        targets => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n\n    const NavitateTo = useCallback(targets => dispatch(navigateTo(targets)), [\n        dispatch\n    ]);\n    const ShowImgPreivew = useCallback(\n        targets => dispatch(showImgPreivew(targets)),\n        [dispatch]\n    );\n    const OpenMusicDialog = useCallback(() => dispatch(openMusicDialog()), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch]\n    );\n    const OpenLoadingDialog = useCallback(\n        text => dispatch(openLoadingDialog(text)),\n        [dispatch]\n    );\n\n    const classes = useStyles();\n\n    const contextMenu = e => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex(value => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const selectFile = e => {\n        dispatch(selectFileAction(props.file, e, props.index));\n    };\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\n        );\n    };\n    const handleClick = e => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n        }\n        if (\n            statusHelper.isMobile() ||\n            statusHelper.isSharePage(location.pathname)\n        ) {\n            selectFile(e);\n            if (props.file.type === \"dir\" && !e.ctrlKey) {\n                enterFolder();\n                return;\n            }\n        } else {\n            selectFile(e);\n        }\n    };\n\n    const handleDoubleClick = () => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n        const isShare = statusHelper.isSharePage(location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                ToggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\");\n                return;\n            }\n        }\n        if (window.shareInfo && !window.shareInfo.preview) {\n            OpenLoadingDialog(\"获取下载地址...\");\n            return;\n        }\n        const previewPath =\n            selected[0].path === \"/\"\n                ? selected[0].path + selected[0].name\n                : selected[0].path + \"/\" + selected[0].name;\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                ShowImgPreivew(selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/doc?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"audio\":\n                OpenMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/video?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/text?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"pdf\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/pdf?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/pdf?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"code\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/code?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/code?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            default:\n                OpenLoadingDialog(\"获取下载地址...\");\n                return;\n        }\n    };\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod\n        },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: monitor => ({\n            isDragging: monitor.isDragging()\n        })\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <TableItem\n                contextMenu={contextMenu}\n                handleClick={handleClick}\n                handleDoubleClick={handleDoubleClick.bind(this)}\n                file={props.file}\n            />\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper folder={props.file} />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon ref={drag} file={props.file} />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon file={props.file} />\n                )}\n            </div>\n        </div>\n    );\n}\n","import {\n    CircularProgress,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport SadIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport EmptyIcon from \"@material-ui/icons/Unarchive\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    navigateUp,\n    openRemoveDialog,\n    setSelectedTarget\n} from \"../../actions/index\";\nimport explorer from \"../../redux/explorer\";\nimport { isMac } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport ContextMenu from \"./ContextMenu\";\nimport ImgPreivew from \"./ImgPreview\";\nimport ObjectIcon from \"./ObjectIcon\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\"\n    },\n    root: {\n        flexGrow: 1,\n        padding: \"10px\",\n        overflowY: \"auto\",\n        height: \"calc(100vh - 113px)\",\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\"\n        }\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\"\n        }\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\"\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\"\n    },\n    errorBox: {\n        padding: theme.spacing(4)\n    },\n    errorMsg: {\n        marginTop: \"10px\"\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: theme.palette.text.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    emptyIcon: {\n        fontSize: \"160px\"\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.text.disabled\n    },\n    emptyInfoSmall: {\n        color: theme.palette.text.hint\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    flexFix: {\n        minWidth: 0\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\"\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\"\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        sortMethod: state.viewUpdate.sortMethod,\n        fileList: state.explorer.fileList,\n        dirList: state.explorer.dirList,\n        loading: state.viewUpdate.navigatorLoading,\n        navigatorError: state.viewUpdate.navigatorError,\n        navigatorErrorMsg: state.viewUpdate.navigatorErrorMsg,\n        keywords: state.explorer.keywords,\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigateToPath: path => {\n            dispatch(navigateTo(path));\n        },\n\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        changeSort: method => {\n            dispatch(explorer.actions.changeSortMethod(method));\n        }\n    };\n};\n\nclass ExplorerCompoment extends Component {\n    constructor() {\n        super();\n        this.keyMap = {\n            DELETE_FILE: \"del\",\n            SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+a`\n        };\n\n        this.handlers = {\n            DELETE_FILE: () => {\n                if (this.props.selected.length > 0 && !this.props.share) {\n                    this.props.openRemoveDialog();\n                }\n            },\n            SELECT_ALL: e => {\n                e.preventDefault();\n                if (\n                    this.props.selected.length >=\n                    this.props.dirList.length + this.props.fileList.length\n                ) {\n                    this.props.setSelectedTarget([]);\n                } else {\n                    this.props.setSelectedTarget([\n                        ...this.props.dirList,\n                        ...this.props.fileList\n                    ]);\n                }\n            }\n        };\n\n        configure({\n            ignoreTags: [\"input\", \"select\", \"textarea\"]\n        });\n    }\n\n    contextMenu = e => {\n        e.preventDefault();\n        if (\n            this.props.keywords === \"\" &&\n            !pathHelper.isSharePage(this.props.location.pathname)\n        ) {\n            if (!this.props.loading) {\n                this.props.changeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    componentDidUpdate() {\n        this.away = 0;\n    }\n\n    ClickAway = e => {\n        const element = e.target;\n        if (element.dataset.clickaway) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        const showView =\n            !this.props.loading &&\n            (this.props.dirList.length !== 0 ||\n                this.props.fileList.length !== 0);\n        const listView = (\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"namePos\" ||\n                                    this.props.sortMethod === \"nameRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"namePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"namePos\"\n                                            ? \"nameRev\"\n                                            : \"namePos\"\n                                    );\n                                }}\n                            >\n                                名称\n                                {this.props.sortMethod === \"namePos\" ||\n                                this.props.sortMethod === \"nameRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"nameRev\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"sizePos\" ||\n                                    this.props.sortMethod === \"sizeRes\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"sizePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"sizePos\"\n                                            ? \"sizeRes\"\n                                            : \"sizePos\"\n                                    );\n                                }}\n                            >\n                                大小\n                                {this.props.sortMethod === \"sizePos\" ||\n                                this.props.sortMethod === \"sizeRes\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"timePos\" ||\n                                    this.props.sortMethod === \"timeRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"timePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"timePos\"\n                                            ? \"timeRev\"\n                                            : \"timePos\"\n                                    );\n                                }}\n                            >\n                                日期\n                                {this.props.sortMethod === \"timePos\" ||\n                                this.props.sortMethod === \"timeRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pathHelper.isMobile() && this.props.path !== \"/\" && (\n                        <ObjectIcon\n                            file={{\n                                type: \"up\",\n                                name: \"上级目录\"\n                            }}\n                        />\n                    )}\n                    {this.props.dirList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                    {this.props.fileList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                </TableBody>\n            </Table>\n        );\n\n        const normalView = (\n            <div className={classes.flexFix}>\n                {this.props.dirList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件夹\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                        >\n                            {this.props.dirList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    xs={6}\n                                    md={3}\n                                    sm={4}\n                                    lg={2}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        file={value}\n                                        index={index}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n                {this.props.fileList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                        >\n                            {this.props.fileList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    xs={6}\n                                    md={3}\n                                    sm={4}\n                                    lg={2}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        index={index}\n                                        file={value}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n            </div>\n        );\n        const view = this.props.viewMethod === \"list\" ? listView : normalView;\n        return (\n            <div\n                onContextMenu={this.contextMenu}\n                onClick={this.ClickAway}\n                className={classNames(\n                    {\n                        [classes.root]: this.props.viewMethod !== \"list\",\n                        [classes.rootTable]: this.props.viewMethod === \"list\",\n                        [classes.rootShare]: this.props.share\n                    },\n                    classes.button\n                )}\n            >\n                <GlobalHotKeys handlers={this.handlers} keyMap={this.keyMap} />\n                <ContextMenu share={this.props.share} />\n                <ImgPreivew />\n                {this.props.navigatorError && (\n                    <Paper elevation={1} className={classes.errorBox}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            :( 请求时出现错误\n                        </Typography>\n                        <Typography\n                            color={\"textSecondary\"}\n                            className={classes.errorMsg}\n                        >\n                            {this.props.navigatorErrorMsg.message}\n                        </Typography>\n                    </Paper>\n                )}\n\n                {this.props.loading && !this.props.navigatorError && (\n                    <div className={classes.loading}>\n                        <CircularProgress />\n                    </div>\n                )}\n\n                {this.props.keywords === \"\" &&\n                    isHomePage &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError && (\n                        <div className={classes.emptyContainer}>\n                            <EmptyIcon className={classes.emptyIcon} />\n                            <div className={classes.emptyInfoBig}>\n                                拖拽文件至此\n                            </div>\n                            <div className={classes.emptyInfoSmall}>\n                                或点击右下方“上传文件”按钮添加文件\n                            </div>\n                        </div>\n                    )}\n                {((this.props.keywords !== \"\" &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError) ||\n                    (this.props.dirList.length === 0 &&\n                        this.props.fileList.length === 0 &&\n                        !this.props.loading &&\n                        !this.props.navigatorError &&\n                        !isHomePage)) && (\n                    <div className={classes.emptyContainer}>\n                        <SadIcon className={classes.emptyIcon} />\n                        <div className={classes.emptyInfoBig}>\n                            什么都没有找到\n                        </div>\n                    </div>\n                )}\n                {showView && view}\n            </div>\n        );\n    }\n}\n\nExplorerCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired\n};\n\nconst Explorer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ExplorerCompoment)));\n\nexport default Explorer;\n","import React, { useEffect } from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles(theme => ({\n    expandMore: {\n        color: \"#8d8d8d\"\n    },\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    },\n    button: {\n        textTransform: \"none\"\n    }\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder\n                    }\n                };\n            }\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (props.more && isActive) {\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <span onClick={props.onClick} ref={inputRef}>\n            <Button\n                ref={drop}\n                className={classNames(\n                    {\n                        [classes.active]: isActive\n                    },\n                    classes.button\n                )}\n                component=\"span\"\n                title={props.title}\n            >\n                {props.more && <MoreIcon />}\n                {!props.more && (\n                    <>\n                        {props.folder}\n                        {props.last && (\n                            <ExpandMore className={classes.expandMore} />\n                        )}\n                    </>\n                )}\n            </Button>\n        </span>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(theme => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    }\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder\n                }\n            });\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id, isActive);\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive\n            })}\n            onClick={e => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\nexport default function DropDown(props) {\n    let timer;\n    let first = props.folders.length;\n    const status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n    }\n\n    const setActiveStatus = (id, value) => {\n        status[id] = value;\n        if (value) {\n            clearTimeout(timer);\n        } else {\n            let shouldClose = true;\n            status.forEach(element => {\n                if (element) {\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose) {\n                if (first <= 0) {\n                    timer = setTimeout(() => {\n                        props.onClose();\n                    }, 100);\n                } else {\n                    first--;\n                }\n            }\n        }\n        console.log(status);\n    };\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    key={id}\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus={setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    navigateTo,\n    navigateUp,\n    changeViewMethod,\n    setNavigatorError,\n    setNavigatorLoadingStatus,\n    refreshFileList,\n    setSelectedTarget,\n    openCreateFolderDialog,\n    openShareDialog,\n    drawerToggleAction,\n    setShareUserPopover,\n    openResaveDialog,\n    openCompressDialog\n} from \"../../../actions/index\";\nimport explorer from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { setCookie, setGetParameter, fixUrlHash } from \"../../../utils/index\";\nimport {\n    withStyles,\n    Divider,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n    IconButton\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../utils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Archive } from \"@material-ui/icons\";\nimport { FilePlus } from \"mdi-material-ui\";\nimport { openCreateFileDialog } from \"../../../actions\";\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        keywords: state.explorer.keywords,\n        sortMethod: state.viewUpdate.sortMethod\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigateToPath: path => {\n            dispatch(navigateTo(path));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        changeView: method => {\n            dispatch(changeViewMethod(method));\n        },\n        changeSort: method => {\n            dispatch(explorer.actions.changeSortMethod(method));\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: list => {\n            dispatch(explorer.actions.updateFileList(list));\n        },\n        setNavigatorLoadingStatus: status => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: target => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: open => {\n            dispatch(drawerToggleAction(open));\n        },\n        setShareUserPopover: e => {\n            dispatch(setShareUserPopover(e));\n        },\n        openResave: key => {\n            dispatch(openResaveDialog(key));\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        }\n    };\n};\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst sortOptions = [\n    \"文件名称正序\",\n    \"文件名称倒序\",\n    \"上传时间正序\",\n    \"上传时间倒序\",\n    \"文件大小正序\",\n    \"文件大小倒序\"\n];\n\nconst styles = theme => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        },\n        height: \"49px\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\"\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\"\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\"\n    },\n    expandMore: {\n        color: \"#8d8d8d\"\n    },\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\"\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\"\n    }\n});\n\nclass NavigatorComponent extends Component {\n    keywords = \"\";\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n        anchorSort: null,\n        selectedIndex: 0\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        const url = new URL(fixUrlHash(window.location.href));\n        const c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\" : c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n\n        // 后退操作时重新导航\n        window.onpopstate = () => {\n            const url = new URL(fixUrlHash(window.location.href));\n            const c = url.searchParams.get(\"path\");\n            if (c !== null) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\")\n        });\n        let newPath = path !== null ? path : this.props.path;\n        const apiURL = this.props.share\n            ? \"/share/list/\" + this.props.share.key\n            : this.keywords === \"\"\n            ? \"/directory\"\n            : \"/file/search/\";\n        newPath = this.keywords === \"\" ? newPath : this.keywords;\n\n        API.get(apiURL + encodeURIComponent(newPath))\n            .then(response => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                const pathTemp = (path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\")\n                ).join(\",\");\n                setCookie(\"path_tmp\", encodeURIComponent(pathTemp), 1);\n                if (this.keywords === \"\") {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n            })\n            .catch(error => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = path => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (this.props.keywords !== nextProps.keywords) {\n            this.keywords = nextProps.keywords;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = force => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = e => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    showSortOptions = e => {\n        this.setState({ anchorSort: e.currentTarget });\n    };\n\n    performAction = e => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        const presentPath = this.props.path.split(\"/\");\n        const newTarget = [\n            {\n                id: this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\")\n            }\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            case \"newFile\":\n                this.props.openCreateFileDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    handleMenuItemClick = (e, index) => {\n        this.setState({ selectedIndex: index, anchorEl: null });\n        const optionsTable = {\n            0: \"namePos\",\n            1: \"nameRev\",\n            2: \"timePos\",\n            3: \"timeRev\",\n            4: \"sizePos\",\n            5: \"sizeRes\"\n        };\n        this.props.changeSort(optionsTable[index]);\n        this.handleClose();\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        const presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    刷新\n                </MenuItem>\n                {this.props.keywords === \"\" && isHomePage && (\n                    <div>\n                        <Divider />\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            分享\n                        </MenuItem>\n                        {user.group.compress && (\n                            <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                压缩\n                            </MenuItem>\n                        )}\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.performAction(\"newfolder\")}\n                        >\n                            <ListItemIcon>\n                                <NewFolderIcon />\n                            </ListItemIcon>\n                            创建文件夹\n                        </MenuItem>\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\n                            <ListItemIcon>\n                                <FilePlus />\n                            </ListItemIcon>\n                            创建文件\n                        </MenuItem>\n                    </div>\n                )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare\n                    },\n                    classes.container\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        <span>\n                            <PathButton\n                                folder=\"/\"\n                                path=\"/\"\n                                onClick={e => this.navigateTo(e, -1)}\n                            />\n                            <RightIcon className={classes.rightIcon} />\n                        </span>\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title=\"显示路径\"\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                {/* <Button component=\"span\" onClick={(e)=>this.navigateTo(e,this.state.folders.length-1)}>\n                                    {this.state.folders.slice(-1)}  \n                                    <ExpandMore className={classes.expandMore}/>\n                                </Button> */}\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={e =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={e =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        {this.props.viewMethod === \"icon\" && (\n                            <IconButton\n                                title=\"列表展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewListIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n                        {this.props.viewMethod === \"list\" && (\n                            <IconButton\n                                title=\"小图标展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewSmallIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n                        {this.props.viewMethod === \"smallIcon\" && (\n                            <IconButton\n                                title=\"大图标展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewModuleIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n\n                        <IconButton\n                            title=\"排序方式\"\n                            className={classes.sideButton}\n                            onClick={this.showSortOptions}\n                        >\n                            <TextTotateVerticalIcon fontSize=\"small\" />\n                        </IconButton>\n                        <Menu\n                            id=\"sort-menu\"\n                            anchorEl={this.state.anchorSort}\n                            open={Boolean(this.state.anchorSort)}\n                            onClose={this.handleClose}\n                        >\n                            {sortOptions.map((option, index) => (\n                                <MenuItem\n                                    key={option}\n                                    selected={\n                                        index === this.state.selectedIndex\n                                    }\n                                    onClick={event =>\n                                        this.handleMenuItemClick(event, index)\n                                    }\n                                >\n                                    {option}\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                        {this.props.share && (\n                            <IconButton\n                                title={\n                                    \"由 \" +\n                                    this.props.share.creator.nick +\n                                    \" 创建\"\n                                }\n                                className={classes.sideButton}\n                                onClick={e =>\n                                    this.props.setShareUserPopover(\n                                        e.currentTarget\n                                    )\n                                }\n                                style={{ padding: 5 }}\n                            >\n                                <Avatar\n                                    style={{ height: 23, width: 23 }}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.props.share.creator.key +\n                                        \"/s\"\n                                    }\n                                />\n                            </IconButton>\n                        )}\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(NavigatorComponent)));\n\nexport default Navigator;\n","import React, { Component } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    closeAllModals,\n    navigateTo,\n    setSelectedTarget,\n    toggleSnackbar\n} from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport DragLayer from \"./DnD/DragLayer\";\nimport Explorer from \"./Explorer\";\nimport Modals from \"./Modals\";\nimport Navigator from \"./Navigator/Navigator\";\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeSubTitle: text => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navigateTo: path => {\n            dispatch(navigateTo(path));\n        }\n    };\n};\n\nclass FileManager extends Component {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n    }\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navigateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            this.props.changeSubTitle(null);\n        }\n    }\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Modals share={this.props.share} />\n                <Navigator\n                    isShare={this.props.isShare}\n                    share={this.props.share}\n                />\n                <Explorer share={this.props.share} />\n                <DragLayer />\n            </DndProvider>\n        );\n    }\n}\n\nFileManager.propTypes = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(FileManager));\n","import React, { useCallback, useEffect } from \"react\";\nimport DPlayer from \"react-dplayer\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { getBaseURL } from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    player: {\n        borderRadius: \"4px\",\n        maxHeight: 600\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer() {\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <DPlayer\n                    className={classes.player}\n                    options={{\n                        video: {\n                            url:\n                                getBaseURL() +\n                                (pathHelper.isSharePage(location.pathname)\n                                    ? \"/share/preview/\" +\n                                      id +\n                                      (query.get(\"share_path\") !== \"\"\n                                          ? \"?path=\" +\n                                            encodeURIComponent(\n                                                query.get(\"share_path\")\n                                            )\n                                          : \"\")\n                                    : \"/file/preview/\" + query.get(\"id\"))\n                        }\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    Typography,\n    Grid,\n    IconButton\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        padding: theme.spacing(1)\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\"\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const query = useQuery();\n    const location = useLocation();\n    const history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = useCallback((keywords, page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords)\n        )\n            .then(response => {\n                if (response.data.items.length === 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"找不到符合条件的分享\",\n                        \"info\"\n                    );\n                }\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(() => {\n                ToggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    }, []);\n\n    useEffect(() => {\n        const keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"请输入搜索关键词\", \"warning\");\n        }\n    }, [location]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = event => {\n        setOrderBy(event.target.value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        搜索结果\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                创建日期由晚到早\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                创建日期由早到晚\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                下载次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                下载次数由小到大\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                浏览次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                浏览次数由小到大\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.map(value => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\"/s/\" + value.key)\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"}{\" \"}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={\n                                    <span>\n                                        分享于{\" \"}\n                                        <TimeAgo\n                                            datetime={value.create_date}\n                                            locale=\"zh_CN\"\n                                        />\n                                    </span>\n                                }\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    withStyles,\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    CardActions,\n    Typography,\n    Grid,\n    IconButton,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Button,\n    TextField\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withRouter } from \"react-router-dom\";\n\nconst styles = theme => ({\n    cardContainer: {\n        padding: theme.spacing(1)\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\"\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy: \"created_at DESC\"\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, this.state.orderBy);\n    };\n\n    showPwd = pwd => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = id => {\n        API.delete(\"/share/\" + id)\n            .then(() => {\n                let oldList = this.state.shareList;\n                oldList = oldList.filter(value => {\n                    return value.key !== id;\n                });\n                this.setState({\n                    shareList: oldList,\n                    total: this.state.total - 1\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"分享已取消\",\n                    \"success\"\n                );\n                if (oldList.length === 0) {\n                    this.loadList(1, this.state.orderBy);\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePermission = id => {\n        const newPwd = Math.random()\n            .toString(36)\n            .substr(2)\n            .slice(2, 8);\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex(value => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"password\",\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\"\n        })\n            .then(response => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePreviewOption = id => {\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex(value => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"preview_enabled\",\n            value: oldList[shareIndex].preview ? \"false\" : \"true\"\n        })\n            .then(response => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadList = (page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1]\n        )\n            .then(response => {\n                if (response.data.items.length === 0) {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"没有更多了\",\n                        \"info\"\n                    );\n                }\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value\n        });\n        this.loadList(value, this.state.orderBy);\n    };\n\n    handleOrderChange = event => {\n        this.setState({\n            orderBy: event.target.value\n        });\n        this.loadList(this.state.page, event.target.value);\n    };\n\n    isExpired = share => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n                            我的分享\n                        </Typography>\n                    </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select\n                                color={\"secondary\"}\n                                onChange={this.handleOrderChange}\n                                value={this.state.orderBy}\n                            >\n                                <MenuItem value={\"created_at DESC\"}>\n                                    创建日期由晚到早\n                                </MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>\n                                    创建日期由早到晚\n                                </MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>\n                                    下载次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>\n                                    下载次数由小到大\n                                </MenuItem>\n                                <MenuItem value={\"views DESC\"}>\n                                    浏览次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"views ASC\"}>\n                                    浏览次数由小到大\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={24} className={classes.gird}>\n                    {this.state.shareList.map(value => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"}{\" \"}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {value.create_date}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label=\"已失效\"\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\"\n                                    }}\n                                >\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/s/\" +\n                                                        value.key +\n                                                        (value.password === \"\"\n                                                            ? \"\"\n                                                            : \"?password=\" +\n                                                              value.password)\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"变更为公开分享\"\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"查看密码\"\n                                                onClick={() =>\n                                                    this.showPwd(value.password)\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title=\"变更为私密分享\"\n                                            onClick={() =>\n                                                this.changePermission(value.key)\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? \"禁止预览\"\n                                                : \"允许预览\"\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            {!value.preview ? (\n                                                <VisibilityOff />\n                                            ) : (\n                                                <EyeIcon />\n                                            )}\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title=\"取消分享\"\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                        count={Math.ceil(this.state.total / 18)}\n                        onChange={this.handlePageChange}\n                        color=\"secondary\"\n                    />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> 分享密码 </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭{\" \"}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(MyShareCompoment)));\n\nexport default MyShare;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    },\n    content: {\n        padding: 0\n    }\n}));\n\nexport default function SelectFileDialog(props) {\n    const [files, setFiles] = useState(props.files);\n\n    useEffect(() => {\n        setFiles(props.files);\n    }, [props.files]);\n\n    const handleChange = index => event => {\n        const filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v, k) => {\n            if (v.index === index) {\n                filesCopy[k] = {\n                    ...filesCopy[k],\n                    selected: event.target.checked ? \"true\" : \"false\"\n                };\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = () => {\n        const index = [];\n        // eslint-disable-next-line\n        files.map(v => {\n            if (v.selected === \"true\") {\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">选择要下载的文件</DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                {files.map((v, k) => {\n                    return (\n                        <MenuItem key={k}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange(v.index)}\n                                            checked={v.selected === \"true\"}\n                                            value=\"checkedA\"\n                                        />\n                                    }\n                                    label={v.path}\n                                />\n                            </FormGroup>\n                        </MenuItem>\n                    );\n                })}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        onClick={submit}\n                        disabled={props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport { hex2bin, sizeToString } from \"../../utils\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {}\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\"\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\"\n        }\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    iconBig: {\n        fontSize: \"30px\"\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\"\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\"\n    },\n    expanded: {\n        transform: \"rotate(180deg)\"\n    },\n    subFileName: {\n        display: \"flex\"\n    },\n    subFileIcon: {\n        marginRight: \"20px\"\n    },\n    scroll: {\n        overflowY: \"auto\"\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\"\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1)\n    },\n    info: {\n        padding: theme.spacing(2)\n    },\n    infoTitle: {\n        fontWeight: 700\n    },\n    infoValue: {\n        color: theme.palette.text.secondary\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default\n    }\n}));\n\nexport default function DownloadingCard(props) {\n    const canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\n\n    const handleChange = panel => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach(str => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\n                ];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield, task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter(v => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const deleteFile = index => {\n        setLoading(true);\n        const current = activeFiles();\n        const newIndex = [];\n        const newFiles = [];\n        // eslint-disable-next-line\n        current.map(v => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\"\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\"\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex\n        })\n            .then(() => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles\n                    }\n                });\n                ToggleSnackbar(\"top\", \"right\", \"文件已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? \"[未知]\" : task.name;\n    }, [task]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid)\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已取消，状态会在稍后更新\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n\n            });\n    };\n\n    //重新下载\n    const reDownLoad = () => {\n        new Promise(((resolve, reject) => {\n            setLoading(true);\n            API.delete(\"/aria2/task/\" + task.info.gid)\n                .then(() => {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"重新下载，状态会在稍后更新\",\n                        \"success\"\n                    );\n                    setLoading(false);\n                    resolve(\"delete ok!\");\n                })\n                .catch(error => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                    // window.location.reload();\n                });\n        })).then(result => {\n            console.log(\"result\",result)\n            return new Promise(((resolve, reject) => {\n                setTimeout(()=>{\n                    setLoading(true);\n                    API.post(\"/aria2/url\", {\n                        dst: task.dst,\n                        url: \"magnet:?xt=urn:btih:\" + task.info.infoHash\n                    })\n                        .then((res) => {\n                            resolve(res)\n                        })\n                        .catch(error => {\n                            ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                        })\n\n                },5000)\n            }))\n        }).then((res)=>{\n            console.log(\"res\",res)\n            setLoading(false);\n        }).finally(()=>{\n            console.log(\"任务完成 刷新页面\")\n            window.location.reload()\n        })\n\n    };\n\n    // aria2 相关 停止 forcePause 继续 unpause\n    const ariaClient = ()=>{\n        axios({\n            method:\"post\",\n            url:\"http://www.reasion.xyz:20121/api/v3/admin/setting\",\n            data:{\"keys\":[\"aria2_rpcurl\",\"aria2_token\",\"aria2_temp_path\",\"aria2_options\",\"aria2_interval\",\"aria2_call_timeout\"]}\n        }).then((res)=>{\n            console.log(\"aria\",res)\n        })\n    }\n    // const pause =\n\n    const changeSelectedFile = fileIndex => {\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"操作成功，状态会在稍后更新\",\n                    \"success\"\n                );\n                setSelectDialogOpen(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open={selectDialogOpen}\n                onClose={() => setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={selectFileOption}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" && (\n                        <div className={classes.scroll}>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {activeFiles().map(value => {\n                                        return (\n                                            <TableRow\n                                                key={value.index}\n                                                style={{\n                                                    background:\n                                                        \"linear-gradient(to right, \" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" 0%,\" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" 100%)\"\n                                                }}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"删除此文件\">\n                                                        <IconButton\n                                                            onClick={() =>\n                                                                deleteFile(\n                                                                    value.index\n                                                                )\n                                                            }\n                                                            disabled={loading}\n                                                            size={\"small\"}\n                                                        >\n                                                            <HighlightOff />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" && (\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => {\n                                    setSelectDialogOpen(true);\n                                    setSelectFileOption([\n                                        ...props.task.info.files\n                                    ]);\n                                }}\n                            >\n                                选择要下载的文件\n                            </Button>\n                        )}\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            取消任务\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={reDownLoad}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            重新下载\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={ariaClient}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            测试\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    更新于：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={parseInt(task.update + \"000\")}\n                                        locale=\"zh_CN\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传速度：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            磁力链：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak: \"break-all\"\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {\"magnet:?xt=urn:btih:\"+ task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    {task.info.bittorrent.mode !== \"\" && (\n                                        <>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种者：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种中：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? \"是\"\n                                                : \"否\"}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片数量：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport { sizeToString } from \"../../utils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { useHistory } from \"react-router\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {}\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\"\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\"\n        },\n        textAlign: \"left\"\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    iconBig: {\n        fontSize: \"30px\"\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\"\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\"\n    },\n    expanded: {\n        transform: \"rotate(180deg)\"\n    },\n    subFileName: {\n        display: \"flex\"\n    },\n    subFileIcon: {\n        marginRight: \"20px\"\n    },\n    scroll: {\n        overflowY: \"auto\"\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\"\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1)\n    },\n    info: {\n        padding: theme.spacing(2)\n    },\n    infoTitle: {\n        fontWeight: 700\n    },\n    infoValue: {\n        color: theme.palette.text.secondary\n    }\n}));\n\nexport default function FinishedCard(props) {\n    // console.log(\"task\",props)\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = () => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + props.task.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"删除成功\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                window.location.reload();\n            });\n    };\n\n    //重新下载\n    const reDownLoad = () => {\n        setLoading(true);\n        new Promise(((resolve, reject) => {\n            API.delete(\"/aria2/task/\" + props.task.gid)\n                .then(() => {\n                    resolve(\"delete ok!\");\n                })\n                .catch(error => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                    window.location.reload();\n                });\n        })).then(result => {\n            console.log(\"result\",result)\n            API.post(\"/aria2/url\", {\n                dst: props.task.dst,\n                url: \"magnet:?xt=urn:btih:\" + props.task.info.infoHash\n            })\n                .then((res) => {\n                    console.log(res);\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"重新下载，状态会在稍后更新\",\n                        \"success\"\n                    );\n                })\n                .catch(error => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }).then(() => {\n                setLoading(false);\n            });\n        });\n\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? \"[未知]\" : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter(v => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = error => {\n        try {\n            const res = JSON.parse(error);\n            return res.msg + \"：\" + res.error;\n        } catch (e) {\n            return \"文件转存失败\";\n        }\n    };\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3 && (\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    下载出错：{props.task.error}\n                                </Typography>\n                            </Tooltip>\n                        )}\n                        {props.task.status === 5 && (\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                已取消\n                                {props.task.error !== \"\" && (\n                                    <span>：{props.task.error}</span>\n                                )}\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                        props.task.task_status === 4 && (\n                            <Typography\n                                variant=\"body2\"\n                                style={{\n                                    color: theme.palette.success.main\n                                }}\n                                noWrap\n                            >\n                                已完成\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                        props.task.task_status === 0 && (\n                            <Typography\n                                variant=\"body2\"\n                                style={{\n                                    color: theme.palette.success.light\n                                }}\n                                noWrap\n                            >\n                                已完成，转存排队中\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                        props.task.task_status === 1 && (\n                            <Typography\n                                variant=\"body2\"\n                                style={{\n                                    color: theme.palette.success.light\n                                }}\n                                noWrap\n                            >\n                                已完成，转存处理中\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                        props.task.task_status === 2 && (\n                            <Typography\n                                variant=\"body2\"\n                                color={\"error\"}\n                                noWrap\n                            >\n                                {getTaskError(props.task.task_error)}\n                            </Typography>\n                        )}\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]: expanded\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length > 1 && (\n                        <div className={classes.scroll}>\n                            <Table>\n                                <TableBody>\n                                    {activeFiles().map(value => {\n                                        return (\n                                            <TableRow key={value.index}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                    encodeURIComponent(props.task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            删除记录\n                        </Button>\n                        {/*<Button*/}\n                        {/*    className={classes.actionButton}*/}\n                        {/*    onClick={reDownLoad}*/}\n                        {/*    variant=\"contained\"*/}\n                        {/*    color=\"secondary\"*/}\n                        {/*    disabled={loading}*/}\n                        {/*>*/}\n                        {/*    重新下载*/}\n                        {/*</Button>*/}\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    创建日期：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {props.task.create}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    最后更新：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {props.task.update}\n                                </Grid>\n                            </Grid>\n                            {/*<Grid container xs={12} sm={4}>*/}\n                            {/*    <Grid item xs={4} className={classes.infoTitle}>*/}\n                            {/*        磁力链:*/}\n                            {/*    </Grid>*/}\n                            {/*    <Grid item xs={8} className={classes.infoValue}>*/}\n                            {/*        {\"magnet:?xt=urn:btih:\" + props.task.info.infoHash}*/}\n                            {/*    </Grid>*/}\n                            {/*</Grid>*/}\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { openRemoteDownloadDialog } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport Modals from \"../FileManager/Modals\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    }\n}));\n\nexport default function RemoteDownloadButton() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const OpenRemoteDownloadDialog = useCallback(\n        () => dispatch(openRemoteDownloadDialog()),\n        [dispatch]\n    );\n\n    return (\n        <>\n            <Modals />\n            <AutoHidden enable>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    onClick={() => OpenRemoteDownloadDialog()}\n                >\n                    <Add />\n                </Fab>\n            </AutoHidden>\n        </>\n    );\n}\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\nimport RemoteDownloadButton from \"../Dial/Aria2\";\nimport Auth from \"../../middleware/Auth\";\n\nconst styles = theme => ({\n    actions: {\n        display: \"flex\"\n    },\n    title: {\n        marginTop: \"20px\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    hide: {\n        display: \"none\"\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\"\n    },\n    shareFix: {\n        marginLeft: \"20px\"\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n    },\n    margin: {\n        marginTop: theme.spacing(2)\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n        this.loadMore();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true\n        });\n        API.get(\"/aria2/downloading\")\n            .then(response => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if (response.data.length > 0) {\n                    this.interval = setTimeout(\n                        this.loadDownloading,\n                        1000 * response.data[0].interval\n                    );\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true\n        });\n        API.get(\"/aria2/finished?page=\" + ++this.page)\n            .then(response => {\n                this.setState({\n                    finishedList: [\n                        ...this.state.finishedList,\n                        ...response.data\n                    ],\n                    loading: false,\n                    continue: response.data.length >= 10\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n                this.setState({\n                    loading: false\n                });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n\n        return (\n            <div className={classes.layout}>\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    进行中\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={k} task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    已完成\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return <FinishedCard key={k} task={value} />;\n                        }\n                        return null;\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        加载更多\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(DownloadComponent));\n\nexport default Download;\n","import React from \"react\";\nimport { Facebook } from \"react-content-loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\"\n        },\n\n        marginTop: 30\n    }\n}));\n\nconst MyLoader = props => {\n    return <Facebook className={props.className} />;\n};\n\nfunction PageLoading() {\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\"\n            }}\n        >\n            <MyLoader className={classes.loader} />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\n\nimport {\n    withStyles,\n    Button,\n    Card,\n    Divider,\n    CardHeader,\n    CardContent,\n    CardActions,\n    TextField,\n    Avatar\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\n\nconst styles = theme => ({\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    continue: {\n        marginLeft: \"auto\",\n        marginRight: \"10px\",\n        marginRottom: \"10px\"\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass LockedFileCompoment extends Component {\n    constructor(props) {\n        super(props);\n        const query = new URLSearchParams(this.props.location.search);\n        this.state = {\n            pwd: query.get(\"password\")\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    submit = e => {\n        e.preventDefault();\n        if (this.state.pwd === \"\") {\n            return;\n        }\n        this.props.setPassowrd(this.state.pwd);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={\n                                    \"/api/v3/user/avatar/\" +\n                                    this.props.share.creator.key +\n                                    \"/l\"\n                                }\n                            />\n                        }\n                        title={this.props.share.creator.nick + \" 的加密分享\"}\n                        subheader={this.props.share.create_date}\n                    />\n                    <Divider />\n                    <CardContent>\n                        <form onSubmit={this.submit}>\n                            <TextField\n                                id=\"pwd\"\n                                label=\"输入分享密码\"\n                                value={this.state.pwd}\n                                onChange={this.handleChange(\"pwd\")}\n                                margin=\"normal\"\n                                type=\"password\"\n                                autoFocus\n                                fullWidth\n                                color=\"secondary\"\n                            />\n                        </form>\n                    </CardContent>\n                    <CardActions\n                        className={classes.actions}\n                        disableActionSpacing\n                    >\n                        <Button\n                            onClick={this.submit}\n                            color=\"secondary\"\n                            className={classes.continue}\n                            variant=\"contained\"\n                            disabled={\n                                this.state.pwd === \"\" || this.props.loading\n                            }\n                        >\n                            继续\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst LockedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(LockedFileCompoment)));\n\nexport default LockedFile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles(theme => ({\n    boxHeader: {\n        textAlign: \"center\",\n        padding: 24\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: \"0 auto\",\n        width: 50,\n        height: 50,\n        cursor: \"pointer\"\n    },\n    shareDes: {\n        marginTop: 12\n    },\n    shareInfo: {\n        color: theme.palette.text.disabled,\n        fontSize: 14\n    }\n}));\n\nexport default function Creator(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const getSecondDes = () => {\n        if (props.share.expire > 0) {\n            if (props.share.expire >= 24 * 3600) {\n                return (\n                    Math.round(props.share.expire / (24 * 3600)) + \" 天后到期\"\n                );\n            }\n            return Math.round(props.share.expire / 3600) + \" 小时后到期\";\n        }\n        return props.share.create_date;\n    };\n\n    const userProfile = () => {\n        history.push(\"/profile/\" + props.share.creator.key);\n        props.onClose && props.onClose();\n    };\n\n    return (\n        <div className={classes.boxHeader}>\n            <Avatar\n                className={classes.avatar}\n                alt={props.share.creator.nick}\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\n                onClick={() => userProfile()}\n            />\n            <Typography variant=\"h6\" className={classes.shareDes}>\n                {props.isFolder && (\n                    <>\n                        此分享由{\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        创建\n                    </>\n                )}\n                {!props.isFolder && (\n                    <>\n                        {\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        向您分享了 1 个文件\n                    </>\n                )}\n            </Typography>\n            <Typography className={classes.shareInfo}>\n                {props.share.views} 次浏览 • {props.share.downloads} 次下载 •{\" \"}\n                {getSecondDes()}\n            </Typography>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    showImgPreivew,\n    toggleSnackbar\n} from \"../../actions\";\nimport { isPreviewable } from \"../../config\";\nimport { withStyles, Button, Typography } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport { withRouter } from \"react-router-dom\";\nimport Creator from \"./Creator\";\nimport pathHelper from \"../../utils/page\";\n\nvhCheck();\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"90px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginTop: \"90px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0\n        },\n        justifyContent: \"center\",\n        display: \"flex\"\n    },\n    player: {\n        borderRadius: \"4px\"\n    },\n    fileCotainer: {\n        width: \"200px\",\n        margin: \"0 auto\"\n    },\n    buttonCotainer: {\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\",\n        marginTop: \"20px\"\n    },\n    paper: {\n        padding: theme.spacing(2)\n    },\n    icon: {\n        borderRadius: \"10%\",\n        marginTop: 2\n    },\n\n    box: {\n        width: \"100%\",\n        maxWidth: 440,\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 12,\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 56px)\",\n            borderRadius: 0,\n            maxWidth: 1000\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    boxContent: {\n        padding: 24,\n        display: \"flex\",\n        flex: \"1\"\n    },\n    fileName: {\n        marginLeft: 20\n    },\n    fileSize: {\n        color: theme.palette.text.disabled,\n        fontSize: 14\n    },\n    boxFooter: {\n        display: \"flex\",\n        padding: \"20px 16px\",\n        justifyContent: \"space-between\"\n    },\n    downloadButton: {\n        marginLeft: 8\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: key => {\n            dispatch(openResaveDialog(key));\n        }\n    };\n};\n\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\n\nclass SharedFileCompoment extends Component {\n    state = {\n        anchorEl: null,\n        open: false,\n        purchaseCallback: null,\n        loading: false\n    };\n\n    downloaded = false;\n\n    preview = () => {\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        switch (isPreviewable(this.props.share.source.name)) {\n            case \"img\":\n                this.props.showImgPreivew({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name\n                });\n                return;\n            case \"msDoc\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/doc?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"audio\":\n                this.props.setSelectedTarget([\n                    {\n                        key: this.props.share.key,\n                        type: \"share\"\n                    }\n                ]);\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/video?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"edit\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/text?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"pdf\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/pdf?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"code\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/code?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            default:\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"此文件无法预览\",\n                    \"warning\"\n                );\n                return;\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n    }\n\n    scoreHandle = callback => event => {\n        callback(event);\n    };\n\n    download = () => {\n        this.setState({ loading: true });\n        API.put(\"/share/download/\" + this.props.share.key)\n            .then(response => {\n                this.downloaded = true;\n                window.location.assign(response.data);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.layout}>\n                <Modals />\n                <ImgPreview />\n                <div className={classes.box}>\n                    <Creator share={this.props.share} />\n                    <Divider />\n                    <div className={classes.boxContent}>\n                        <TypeIcon\n                            className={classes.icon}\n                            isUpload\n                            fileName={this.props.share.source.name}\n                        />\n                        <div className={classes.fileName}>\n                            <Typography style={{ wordBreak: \"break-all\" }}>\n                                {this.props.share.source.name}\n                            </Typography>\n                            <Typography className={classes.fileSize}>\n                                {sizeToString(this.props.share.source.size)}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.boxFooter}>\n                        <div className={classes.actionLeft}>\n                            {this.props.share.preview && (\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={this.scoreHandle(this.preview)}\n                                    disabled={this.state.loading}\n                                >\n                                    预览\n                                </Button>\n                            )}\n                        </div>\n                        <div className={classes.actions}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.downloadButton}\n                                onClick={this.scoreHandle(this.download)}\n                                disabled={this.state.loading}\n                            >\n                                下载\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst SharedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFileCompoment)));\n\nexport default SharedFile;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    setShareUserPopover,\n    showImgPreivew,\n    toggleSnackbar\n} from \"../../actions\";\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Creator from \"./Creator\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport pathHelper from \"../../utils/page\";\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 30,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1)\n        }\n    },\n    managerContainer: {\n        overflowY: \"auto\"\n    }\n});\n\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\n\nconst mapStateToProps = state => {\n    return {\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\n        fileList: state.explorer.fileList\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: key => {\n            dispatch(openResaveDialog(key));\n        },\n        setShareUserPopover: e => {\n            dispatch(setShareUserPopover(e));\n        }\n    };\n};\n\nclass SharedFolderComponent extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n        window.shareInfo = this.props.share;\n    }\n\n    componentWillUnmount() {\n        window.shareInfo = null;\n        this.props.setSelectedTarget([]);\n    }\n\n    handleClickAway = () => {\n        if (!pathHelper.isMobile()) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        let readmeShowed = false;\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\n\n        return (\n            <div className={classes.layout}>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <Paper className={classes.managerContainer}>\n                        <FileManager isShare share={this.props.share} />\n                    </Paper>\n                </ClickAwayListener>\n                {/* eslint-disable-next-line */}\n                {this.props.fileList.map(value => {\n                    if (\n                        (value.name.toLowerCase() === \"readme.md\" ||\n                            value.name.toLowerCase() === \"readme.txt\") &&\n                        !readmeShowed\n                    ) {\n                        readmeShowed = true;\n                        return <ReadMe share={this.props.share} file={value} />;\n                    }\n                })}\n                <Popover\n                    id={id}\n                    open={this.props.anchorEl !== null}\n                    anchorEl={this.props.anchorEl}\n                    onClose={() => this.props.setShareUserPopover(null)}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\"\n                    }}\n                >\n                    <Typography>\n                        <Creator\n                            isFolder\n                            onClose={() => this.props.setShareUserPopover(null)}\n                            share={this.props.share}\n                        />\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nconst SharedFolder = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\n\nexport default SharedFolder;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\nimport LockedFile from \"./LockedFile\";\nimport SharedFile from \"./SharedFile\";\nimport SharedFolder from \"./SharedFolder\";\n\nexport default function SharePreload() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(share.creator.nick + \"的加密分享\");\n                if (password !== \"\") {\n                    ToggleSnackbar(\"top\", \"right\", \"密码不正确\", \"warning\");\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n    }, [share, SetSubTitle, ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then(response => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password, ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={\"分享不存在或已过期\"} />}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share && !share.locked && !share.is_dir && (\n                <SharedFile share={share} />\n            )}\n            {share && !share.locked && share.is_dir && (\n                <SharedFolder share={share} />\n            )}\n        </Suspense>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(() => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"-48px\"\n    },\n\n    container: {\n        border: \"none\",\n        width: \"100%\",\n        height: \"calc(100vh - 18px)\",\n        marginBottom: -3\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer() {\n    const [url, setURL] = useState(\"\");\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/doc/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n        API.get(requestURL)\n            .then(response => {\n                setURL(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            {url !== \"\" && (\n                <iframe title={\"ms\"} className={classes.container} src={url} />\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nconst useStyles = makeStyles(theme => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1)\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary\n    },\n    input: {\n        width: 250\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24\n    },\n    button: {\n        marginTop: 8\n    }\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\"\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = name => e => {\n        setValue({\n            ...value,\n            [name]: e.target.value\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath\n        });\n        setPathSelectDialog(false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        取消\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label=\"备注名\"\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label=\"相对根目录\"\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                选择目录\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <Button\n                    disabled={value.path === \"\" || value.name === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    确定\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: \"50px\"\n    },\n    content: {\n        marginTop: theme.spacing(4)\n    },\n    cardContent: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    },\n    create: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nexport default function WebDAV() {\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.get(\"/webdav/accounts\")\n            .then(response => {\n                setAccounts(response.data.accounts);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const deleteAccount = id => {\n        const account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(() => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = account => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name\n        })\n            .then(response => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path\n                    },\n                    ...accounts\n                ]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                WebDAV\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label=\"账号管理\" />\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                WebDAV的地址为：\n                                {window.location.origin + \"/dav\"}\n                                ；登陆用户名统一为：{user.user_name}{\" \"}\n                                ；密码为所创建账号的密码。\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>备注名</TableCell>\n                                            <TableCell align=\"right\">\n                                                密码\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                根目录\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                创建日期\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                操作\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Password}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        size={\"small\"}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                创建新账号\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport TimeAgo from \"timeago-react\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: \"50px\"\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX: \"auto\"\n    },\n    cardContent: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    },\n    create: {\n        marginTop: theme.spacing(2)\n    },\n    noWrap: {\n        wordBreak: \"keepAll\"\n    },\n    footer: {\n        padding: theme.spacing(2)\n    }\n}));\n\nexport default function Tasks() {\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = page => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then(response => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const getError = error => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                任务队列\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">创建于</TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                任务类型\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                状态\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                最后进度\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\">错误信息</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell\n                                    nowrap=\"nowrap\"\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    <TimeAgo\n                                        datetime={row.create_date}\n                                        locale=\"zh_CN\"\n                                    />\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskStatus(row.status)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type, row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <div className={classes.footer}>\n                    <Pagination\n                        count={Math.ceil(total / 10)}\n                        onChange={(e, v) => setPage(v)}\n                        color=\"secondary\"\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    withStyles,\n    Paper,\n    Avatar,\n    Typography,\n    Tabs,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Grid\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    userNav: {\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\"\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\"\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\"\n    },\n    th: {\n        minWidth: \"106px\"\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\"\n        }\n    },\n    tableLink: {\n        cursor: \"pointer\"\n    },\n    navigator: {\n        padding: theme.spacing(2)\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\"\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\"\n    },\n    infoContainer: {\n        marginTop: \"30px\"\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user: null,\n        total: 0\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page, order) => {\n        API.get(\n            \"/user/profile/\" +\n                this.props.match.params.id +\n                \"?page=\" +\n                page +\n                \"&type=\" +\n                order\n        )\n            .then(response => {\n                this.setState({\n                    shareList: response.data.items,\n                    user: response.data.user,\n                    total: response.data.total\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null && <div></div>}\n                {this.state.user !== null && (\n                    <Paper square>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.state.user.id +\n                                        \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label=\"全部分享\" />\n                            <Tab label=\"热门分享\" />\n                            <Tab label=\"个人资料\" />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            UID\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            昵称\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            用户组\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            分享总数\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            注册日期\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>文件名</TableCell>\n                                                <TableCell\n                                                    className={\n                                                        classes.mobileHide\n                                                    }\n                                                >\n                                                    分享日期\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide\n                                                    ]}\n                                                >\n                                                    下载次数\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide\n                                                    ]}\n                                                >\n                                                    浏览次数\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.shareList.map(\n                                                (row, id) => (\n                                                    <TableRow\n                                                        key={id}\n                                                        className={\n                                                            classes.tableLink\n                                                        }\n                                                        onClick={() =>\n                                                            this.props.history.push(\n                                                                \"/s/\" + row.key\n                                                            )\n                                                        }\n                                                    >\n                                                        <TableCell>\n                                                            <Typography>\n                                                                {row.source\n                                                                    ? row.source\n                                                                          .name\n                                                                    : \"[已失效]\"}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell\n                                                            nowrap={\"nowrap\"}\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.create_date}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.downloads}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.views}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                    this.state.listType === 0 && (\n                                        <div className={classes.navigator}>\n                                            <Pagination\n                                                count={Math.ceil(\n                                                    this.state.total / 10\n                                                )}\n                                                onChange={(e, v) =>\n                                                    this.loadList(\n                                                        v,\n                                                        this.state.listType ===\n                                                            0\n                                                            ? \"default\"\n                                                            : \"hot\"\n                                                    )\n                                                }\n                                                color=\"secondary\"\n                                            />\n                                        </div>\n                                    )}\n                            </div>\n                        )}\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ProfileCompoment)));\n\nexport default Profile;\n","import React, { useState, useCallback } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport { bufferDecode, bufferEncode } from \"../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\"\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40\n    },\n    flexContainer: {\n        display: \"flex\"\n    }\n}));\n\nexport default function Authn(props) {\n    const [selected, setSelected] = useState(\"\");\n    const [confirm, setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteCredential = id => {\n        API.patch(\"/user/setting/authn\", {\n            id: id\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"凭证已删除\", \"success\");\n                props.remove(id);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setConfirm(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    const addCredential = () => {\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n        API.put(\"/user/authn\", {})\n            .then(response => {\n                const credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        let i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                        ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey\n                });\n            })\n            .then(credential => {\n                const attestationObject = credential.response.attestationObject;\n                const clientDataJSON = credential.response.clientDataJSON;\n                const rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON)\n                        }\n                    })\n                );\n            })\n            .then(response => {\n                props.add(response.data);\n                ToggleSnackbar(\"top\", \"right\", \"验证器已添加\", \"success\");\n                return;\n            })\n            .catch(error => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\n                <DialogTitle>删除凭证</DialogTitle>\n                <DialogContent>确定要吊销这个凭证吗？</DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => deleteCredential(selected)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                外部认证器\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map(v => (\n                        <>\n                            <ListItem\n                                button\n                                style={{\n                                    paddingRight: 60\n                                }}\n                                onClick={() => {\n                                    setConfirm(true);\n                                    setSelected(v.id);\n                                }}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() => deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff\n                                        className={classes.rightIcon}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={() => addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText primary=\"添加新验证器\" />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexContainer}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport {\n    applyThemes,\n    changeViewMethod,\n    toggleDaylightMode,\n    toggleSnackbar\n} from \"../../actions\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch\n} from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport QRCode from \"qrcode-react\";\nimport { Brightness3, ListAlt, PermContactCalendar } from \"@material-ui/icons\";\nimport { transformTime } from \"../../utils\";\nimport Authn from \"./Authn\";\n\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\"\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800]\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800]\n    },\n    infoText: {\n        marginRight: \"17px\"\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\"\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40\n    },\n    flexContainer: {\n        display: \"flex\"\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\"\n        }\n    },\n    desText: {\n        marginTop: \"10px\"\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\"\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\"\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\"\n    },\n    paddingBottom: {\n        marginBottom: \"30px\"\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2)\n    },\n    qrcode: {\n        width: 128,\n        marginTop: 16,\n        marginRight: 16\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        title: state.siteConfig.title,\n        authn: state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: color => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode: () => {\n            dispatch(toggleDaylightMode());\n        },\n        changeView: method => {\n            dispatch(changeViewMethod(method));\n        }\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\"\n                },\n                options: []\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn: []\n        }\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then(response => {\n                const theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\"\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\"\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"昵称已更改，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\"\n        });\n        const formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设置已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage\n                    }\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"两次密码输入不一致\",\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\"\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码已更新\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\"\n        });\n        API.patch(\"/user/setting/theme\", {\n            theme: this.state.chosenTheme\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"主题配色已更换\",\n                    \"success\"\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\"\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd\n            })\n            .then(response => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\"\n                    );\n                    this.setState({\n                        loading: \"\"\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false\n                    });\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor) {\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then(response => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\"\n        });\n        API.patch(\"/user/setting/2fa\", {\n            code: this.state.authCode\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设定已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                    settings: {\n                        ...this.state.settings,\n                        two_factor: !this.state.settings.two_factor\n                    }\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = current => {\n        if (current !== null) {\n            this.props.toggleDaylightMode();\n            Auth.SetPreference(\"theme_mode\", null);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\");\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个人资料\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary=\"头像\" />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary=\"UID\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"昵称\" />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Email\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"用户组\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"注册时间\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {transformTime(\n                                            parseInt(user.created_at + \"000\")\n                                        )}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        安全隐私\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"个人主页\" />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"登录密码\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"二步验证\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? \"未开启\"\n                                            : \"已开启\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add={credential => {\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: [\n                                        ...this.state.settings.authn,\n                                        credential\n                                    ]\n                                }\n                            });\n                        }}\n                        remove={id => {\n                            let credentials = [...this.state.settings.authn];\n                            credentials = credentials.filter(v => {\n                                return v.id !== id;\n                            });\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: credentials\n                                }\n                            });\n                        }}\n                    />\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个性化\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主题配色\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor}></div>\n                                    <div className={classes.secondColor}></div>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleThemeMode(dark)}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary=\"黑暗模式\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark &&\n                                            (dark === \"dark\"\n                                                ? \"偏好开启\"\n                                                : \"偏好关闭\")}\n                                        {dark === null && \"跟随系统\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleViewMethod()}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文件列表\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" &&\n                                            \"大图标\"}\n                                        {this.props.viewMethod === \"list\" &&\n                                            \"列表\"}\n                                        {this.props.viewMethod ===\n                                            \"smallIcon\" && \"小图标\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"连接地址\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"用户名\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"账号管理\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )}\n                    <div className={classes.paddingBottom}></div>\n                </div>\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改头像</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"从文件上传\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary=\"使用 Gravatar 头像 \"\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            取消\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>修改昵称</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"昵称\"\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改登录密码</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"原密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"确认新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>\n                        {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                        二步验证\n                    </DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n                            {!this.state.settings.two_factor && (\n                                <div className={classes.qrcode}>\n                                    <QRCode\n                                        value={\n                                            \"otpauth://totp/\" +\n                                            this.props.title +\n                                            \"?secret=\" +\n                                            this.state.two_fa_secret\n                                        }\n                                    />\n                                </div>\n                            )}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && (\n                                    <Typography>\n                                        请使用任意二步验证APP或者支持二步验证的密码管理软件扫描左侧二维码添加本站。扫描完成后请填写二步验证APP给出的6位验证码以开启二步验证。\n                                    </Typography>\n                                )}\n                                {this.state.settings.two_factor && (\n                                    <Typography>\n                                        请验证当前二步验证代码。\n                                    </Typography>\n                                )}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label=\"6位验证码\"\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                            二步验证\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>更改主题配色</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                )\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV连接地址</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={window.location.origin + \"/dav\"}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV用户名</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserSettingCompoment)));\n\nexport default UserSetting;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport ReCaptcha from \"./ReCaptcha\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\"\n        }\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    buttonContainer: {\n        display: \"flex\"\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16\n    },\n    avatarSuccess: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main\n    }\n}));\n\nfunction Register() {\n    const [input, setInput] = useState({\n        email: \"\",\n        password: \"\",\n        password_repeat: \"\",\n        captcha: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const title = useSelector(state => state.siteConfig.title);\n    const regCaptcha = useSelector(state => state.siteConfig.regCaptcha);\n    const useReCaptcha = useSelector(\n        state => state.siteConfig.captcha_IsUseReCaptcha\n    );\n    const reCaptchaKey = useSelector(\n        state => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]: e.target.value\n        });\n    };\n\n    const classes = useStyles();\n\n    const refreshCaptcha = useCallback(() => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    }, []);\n\n    const register = e => {\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            captchaCode: input.captcha\n        })\n            .then(response => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setEmailActive(true);\n                } else {\n                    history.push(\"/login?username=\" + input.email);\n                    ToggleSnackbar(\"top\", \"right\", \"注册成功\", \"success\");\n                }\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (regCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n    }, [regCaptcha]);\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <RegIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            注册 {title}\n                        </Typography>\n\n                        <form className={classes.form} onSubmit={register}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">\n                                    电子邮箱\n                                </InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleInputChange(\"email\")}\n                                    autoComplete\n                                    value={input.email}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">密码</InputLabel>\n                                <Input\n                                    name=\"password\"\n                                    onChange={handleInputChange(\"password\")}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={input.password}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">\n                                    确认密码\n                                </InputLabel>\n                                <Input\n                                    name=\"pwdRepeat\"\n                                    onChange={handleInputChange(\n                                        \"password_repeat\"\n                                    )}\n                                    type=\"password\"\n                                    id=\"pwdRepeat\"\n                                    value={input.password_repeat}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            {regCaptcha && !useReCaptcha && (\n                                <div className={classes.captchaContainer}>\n                                    <FormControl\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                    >\n                                        <InputLabel htmlFor=\"captcha\">\n                                            验证码\n                                        </InputLabel>\n                                        <Input\n                                            name=\"captcha\"\n                                            onChange={handleInputChange(\n                                                \"captcha\"\n                                            )}\n                                            type=\"text\"\n                                            id=\"captcha\"\n                                            value={input.captcha}\n                                            autoComplete\n                                        />\n                                    </FormControl>{\" \"}\n                                    <div>\n                                        {captchaData === null && (\n                                            <div\n                                                className={\n                                                    classes.captchaPlaceholder\n                                                }\n                                            >\n                                                <Placeholder />\n                                            </div>\n                                        )}\n                                        {captchaData !== null && (\n                                            <img\n                                                src={captchaData}\n                                                alt=\"captcha\"\n                                                onClick={refreshCaptcha}\n                                            />\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n\n                            {regCaptcha && useReCaptcha && (\n                                <div className={classes.captchaContainer}>\n                                    <FormControl\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                    >\n                                        <ReCaptcha\n                                            style={{ display: \"inline-block\" }}\n                                            sitekey={reCaptchaKey}\n                                            onChange={value =>\n                                                setInput({\n                                                    ...input,\n                                                    captcha: value\n                                                })\n                                            }\n                                            id=\"captcha\"\n                                            name=\"captcha\"\n                                        />\n                                    </FormControl>{\" \"}\n                                </div>\n                            )}\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                                className={classes.submit}\n                            >\n                                注册账号\n                            </Button>\n                        </form>\n\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/login\"}>返回登录</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                {emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatarSuccess}>\n                            <EmailIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            邮件激活\n                        </Typography>\n                        <Typography style={{ marginTop: \"10px\" }}>\n                            一封激活邮件已经发送至您的邮箱，请访问邮件中的链接以继续完成注册。\n                        </Typography>\n                    </Paper>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport { Button, Paper, Avatar, Typography } from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useLocation } from \"react-router\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    const query = useQuery();\n    const location = useLocation();\n\n    const [success, setSuccess] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        API.get(\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\n        )\n            .then(response => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        激活成功\n                    </Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>\n                        您的账号已被成功激活。\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push(\"/login?username=\" + email)}\n                    >\n                        返回登录\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    const query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]: e.target.value\n        });\n    };\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const submit = e => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\"top\", \"right\", \"密码已重设\", \"success\");\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">新密码</InputLabel>\n                        <Input\n                            id=\"pwd\"\n                            type=\"password\"\n                            name=\"pwd\"\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">重复新密码</InputLabel>\n                        <Input\n                            id=\"pwdRepeat\"\n                            type=\"password\"\n                            name=\"pwdRepeat\"\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        重设密码\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/#/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/#/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport ReCaptcha from \"./ReCaptcha\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\"\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    }\n}));\n\nfunction Reset() {\n    const [input, setInput] = useState({\n        email: \"\",\n        captcha: \"\"\n    });\n    const [captchaData, setCaptchaData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(state => state.siteConfig.forgetCaptcha);\n    const useReCaptcha = useSelector(\n        state => state.siteConfig.captcha_IsUseReCaptcha\n    );\n    const reCaptchaKey = useSelector(\n        state => state.siteConfig.captcha_ReCaptchaKey\n    );\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]: e.target.value\n        });\n    };\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        if (forgetCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n        // eslint-disable-next-line\n    }, [forgetCaptcha]);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            captchaCode: input.captcha\n        })\n            .then(() => {\n                setLoading(false);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码重置邮件已发送，请注意查收\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">注册邮箱</InputLabel>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && !useReCaptcha && (\n                        <div className={classes.captchaContainer}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"captcha\">\n                                    验证码\n                                </InputLabel>\n                                <Input\n                                    name=\"captcha\"\n                                    onChange={handleInputChange(\"captcha\")}\n                                    type=\"text\"\n                                    id=\"captcha\"\n                                    value={input.captcha}\n                                    autoComplete\n                                />\n                            </FormControl>{\" \"}\n                            <div>\n                                {captchaData === null && (\n                                    <div className={classes.captchaPlaceholder}>\n                                        <Placeholder />\n                                    </div>\n                                )}\n                                {captchaData !== null && (\n                                    <img\n                                        src={captchaData}\n                                        alt=\"captcha\"\n                                        onClick={refreshCaptcha}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    )}\n                    {forgetCaptcha && useReCaptcha && (\n                        <div className={classes.captchaContainer}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <ReCaptcha\n                                    style={{ display: \"inline-block\" }}\n                                    sitekey={reCaptchaKey}\n                                    onChange={value =>\n                                        setInput({\n                                            ...input,\n                                            captcha: value\n                                        })\n                                    }\n                                    id=\"captcha\"\n                                    name=\"captcha\"\n                                />\n                            </FormControl>{\" \"}\n                        </div>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        发送密码重置邮件\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { changeThemeColor } from \"./utils\";\nimport NotFound from \"./component/Share/NotFound\";\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\";\nimport FileManager from \"./component/FileManager/FileManager.js\";\nimport VideoPreview from \"./component/Viewer/Video.js\";\nimport SearchResult from \"./component/Share/SearchResult\";\nimport MyShare from \"./component/Share/MyShare\";\nimport Download from \"./component/Download/Download\";\nimport SharePreload from \"./component/Share/SharePreload\";\nimport DocViewer from \"./component/Viewer/Doc\";\nimport TextViewer from \"./component/Viewer/Text\";\nimport WebDAV from \"./component/Setting/WebDAV\";\nimport Tasks from \"./component/Setting/Tasks\";\nimport Profile from \"./component/Setting/Profile\";\nimport UserSetting from \"./component/Setting/UserSetting\";\nimport Register from \"./component/Login/Register\";\nimport Activation from \"./component/Login/Activication\";\nimport ResetForm from \"./component/Login/ResetForm\";\nimport Reset from \"./component/Login/Reset\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport CodeViewer from \"./component/Viewer/Code\";\nconst PDFViewer = React.lazy(() =>\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\n);\n\nexport default function App() {\n    const themeConfig = useSelector(state => state.siteConfig.theme);\n    const isLogin = useSelector(state => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        const prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        const theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main\n                }\n            }\n        });\n        changeThemeColor(\n            themeConfig.palette.type === \"dark\"\n                ? theme.palette.background.default\n                : theme.palette.primary.main\n        );\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n            display: \"flex\"\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(0),\n            minWidth: 0\n        },\n        toolbar: theme.mixins.toolbar\n    }));\n\n    const classes = useStyles();\n\n    const { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\"\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\n                                <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\n                                <CodeViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                <MyShare />\n                            </AuthRoute>\n\n                            <Route path={`${path}search`} isLogin={isLogin}>\n                                <SearchResult />\n                            </Route>\n\n                            <Route path={`${path}setting`} isLogin={isLogin}>\n                                <UserSetting />\n                            </Route>\n\n                            <AuthRoute\n                                path={`${path}profile/:id`}\n                                isLogin={isLogin}\n                            >\n                                <Profile />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                <Tasks />\n                            </AuthRoute>\n\n                            <Route path={`${path}login`} exact>\n                                <LoginForm />\n                            </Route>\n\n                            <Route path={`${path}signup`} exact>\n                                <Register />\n                            </Route>\n\n                            <Route path={`${path}activate`} exact>\n                                <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                <Reset />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                <TextViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/pdf(/)*`}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </Route>\n\n                            <Route path={`${path}s/:id/code(/)*`}>\n                                <CodeViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound msg={\"页面不存在\"} />\n                            </Route>\n                        </Switch>\n                    </main>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\n\nexport interface ViewUpdateState {\n    isLogin: boolean;\n    loadUploader: boolean;\n    open: boolean;\n    explorerViewMethod: string;\n    sortMethod:\n        | \"sizePos\"\n        | \"sizeRes\"\n        | \"namePos\"\n        | \"nameRev\"\n        | \"timePos\"\n        | \"timeRev\";\n    subTitle: string | null;\n    contextType: string;\n    contextOpen: boolean;\n    menuOpen: boolean;\n    navigatorLoading: boolean;\n    navigatorError: boolean;\n    navigatorErrorMsg: string | null;\n    modalsLoading: boolean;\n    storageRefresh: boolean;\n    userPopoverAnchorEl: any;\n    shareUserPopoverAnchorEl: any;\n    modals: {\n        createNewFolder: boolean;\n        createNewFile: boolean;\n        rename: boolean;\n        move: boolean;\n        remove: boolean;\n        share: boolean;\n        music: boolean;\n        remoteDownload: boolean;\n        torrentDownload: boolean;\n        getSource: boolean;\n        getMultiLinks: boolean;\n        copy: boolean;\n        resave: boolean;\n        compress: boolean;\n        decompress: boolean;\n        loading: boolean;\n        loadingText: string;\n    };\n    snackbar: {\n        toggle: boolean;\n        vertical: string;\n        horizontal: string;\n        msg: string;\n        color: string;\n    };\n}\nexport const initState: ViewUpdateState = {\n    // 是否登录\n    isLogin: Auth.Check(),\n    loadUploader: false,\n    open: false,\n    explorerViewMethod: \"icon\",\n    sortMethod: \"timePos\",\n    subTitle: null,\n    contextType: \"none\",\n    contextOpen: false,\n    menuOpen: false,\n    navigatorLoading: true,\n    navigatorError: false,\n    navigatorErrorMsg: null,\n    modalsLoading: false,\n    storageRefresh: false,\n    userPopoverAnchorEl: null,\n    shareUserPopoverAnchorEl: null,\n    modals: {\n        createNewFolder: false,\n        createNewFile: false,\n        rename: false,\n        move: false,\n        remove: false,\n        share: false,\n        music: false,\n        remoteDownload: false,\n        torrentDownload: false,\n        getSource: false,\n        getMultiLinks:false,\n        copy: false,\n        resave: false,\n        compress: false,\n        decompress: false,\n        loading: false,\n        loadingText: \"\"\n    },\n    snackbar: {\n        toggle: false,\n        vertical: \"top\",\n        horizontal: \"center\",\n        msg: \"\",\n        color: \"\"\n    }\n};\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\n    switch (action.type) {\n        case \"DRAWER_TOGGLE\":\n            return Object.assign({}, state, {\n                open: action.open\n            });\n        case \"CHANGE_VIEW_METHOD\":\n            return Object.assign({}, state, {\n                explorerViewMethod: action.method\n            });\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\n            return Object.assign({}, state, {\n                navigatorLoading: action.status\n            });\n        case \"SET_NAVIGATOR_ERROR\":\n            return Object.assign({}, state, {\n                navigatorError: action.status,\n                navigatorErrorMsg: action.msg\n            });\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_CREATE_FILE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFile: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_RENAME_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    rename: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_REMOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remove: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_MOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    move: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_RESAVE_DIALOG\":\n            // window.shareKey = action.key;\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    resave: true\n                }),\n                contextOpen: false\n            });\n        case \"SET_USER_POPOVER\":\n            return Object.assign({}, state, {\n                userPopoverAnchorEl: action.anchor\n            });\n        case \"SET_SHARE_USER_POPOVER\":\n            return Object.assign({}, state, {\n                shareUserPopoverAnchorEl: action.anchor\n            });\n        case \"OPEN_SHARE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    share: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_MUSIC_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    music: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    torrentDownload: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_DECOMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    decompress: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_COMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    compress: true\n                }),\n                contextOpen: false\n            });\n            //获取外链\n        case \"OPEN_GET_SOURCE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getSource: true\n                }),\n                contextOpen: false\n            });\n        //获取外链\n        case \"GET_MULTI_LINKS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getMultiLinks: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_COPY_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    copy: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_LOADING_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    loading: true,\n                    loadingText: action.text\n                }),\n                contextOpen: false\n            });\n        case \"CLOSE_ALL_MODALS\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: false,\n                    createNewFile: false,\n                    rename: false,\n                    move: false,\n                    remove: false,\n                    share: false,\n                    music: false,\n                    remoteDownload: false,\n                    torrentDownload: false,\n                    getSource: false,\n                    resave: false,\n                    copy: false,\n                    loading: false,\n                    compress: false,\n                    decompress: false\n                })\n            });\n        case \"TOGGLE_SNACKBAR\":\n            return Object.assign({}, state, {\n                snackbar: {\n                    toggle: !state.snackbar.toggle,\n                    vertical: action.vertical,\n                    horizontal: action.horizontal,\n                    msg: action.msg,\n                    color: action.color\n                }\n            });\n        case \"SET_MODALS_LOADING\":\n            return Object.assign({}, state, {\n                modalsLoading: action.status\n            });\n        case \"SET_SESSION_STATUS\":\n            return {\n                ...state,\n                isLogin: action.status\n            };\n        case \"ENABLE_LOAD_UPLOADER\":\n            return Object.assign({}, state, {\n                loadUploader: true\n            });\n        case \"REFRESH_STORAGE\":\n            return Object.assign({}, state, {\n                storageRefresh: !state.storageRefresh\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: true\n            });\n        case \"CHANGE_CONTEXT_MENU\":\n            if (state.contextOpen && action.open) {\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                contextOpen: action.open,\n                contextType: action.menuType\n            });\n        case \"SET_SUBTITLE\":\n            return Object.assign({}, state, {\n                subTitle: action.title\n            });\n        case \"SET_SORT_METHOD\":\n            return {\n                ...state,\n                sortMethod: action.method\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: action.navigatorLoading\n            };\n        default:\n            return state;\n    }\n};\n\nexport default viewUpdate;\n","/* eslint-disable no-case-declarations */\nimport { InitSiteConfig } from \"../middleware/Init\";\nimport { combineReducers } from \"../redux/combineReducers\";\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\nimport explorer from \"../redux/explorer/reducer\";\n\nconst doNavigate = (path, state) => {\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator: Object.assign({}, state.navigator, {\n            path: path\n        })\n    });\n};\n\nexport const initState = {\n    siteConfig: {\n        title: window.subTitle,\n        siteICPId: \"\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes: null,\n        authn: false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\"\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\"\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\"\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\"\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\"\n                }\n            }\n        },\n        captcha_IsUseReCaptcha: false,\n        captcha_ReCaptchaKey: \"defaultKey\"\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true\n    }\n};\n\nconst defaultStatus = InitSiteConfig(initState);\n\n// TODO: 将cloureveApp切分成小的reducer\nconst cloudreveApp = (state = defaultStatus, action) => {\n    switch (action.type) {\n        case \"SET_NAVIGATOR\":\n            return doNavigate(action.path, state);\n        case \"TOGGLE_DAYLIGHT_MODE\": {\n            const copy = Object.assign({}, state);\n            if (\n                copy.siteConfig.theme.palette.type === undefined ||\n                copy.siteConfig.theme.palette.type === \"light\"\n            ) {\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme: {\n                            ...state.siteConfig.theme,\n                            palette: {\n                                ...state.siteConfig.theme.palette,\n                                type: \"dark\"\n                            }\n                        }\n                    }\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme: {\n                        ...state.siteConfig.theme,\n                        palette: {\n                            ...state.siteConfig.theme.palette,\n                            type: \"light\"\n                        }\n                    }\n                }\n            };\n        }\n        case \"APPLY_THEME\":\n            if (state.siteConfig.themes !== null) {\n                const themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined) {\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme: themes[action.theme]\n                    })\n                });\n            }\n            break;\n        case \"NAVIGATOR_UP\":\n            return doNavigate(action.path, state);\n        case \"SET_SITE_CONFIG\":\n            return Object.assign({}, state, {\n                siteConfig: action.config\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh: !state.navigator.refresh\n                })\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/搜索结果\",\n                    refresh:\n                        state.explorer.keywords === \"\"\n                            ? state.navigator.refresh\n                            : !state.navigator.refresh\n                })\n            });\n        default:\n            return state;\n    }\n};\n\nexport default (state, action) => {\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\n        state || {};\n    const appState = cloudreveApp(state, action);\n    const combinedState = combineReducers({ viewUpdate, explorer })(\n        { viewUpdate: viewUpdateState, explorer: explorerState },\n        action\n    );\n    return {\n        ...appState,\n        ...combinedState\n    };\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = {\n    h1: {\n        color: \"#a4a4a4\",\n        margin: \"5px 0px\"\n    },\n    h2: {\n        margin: \"15px 0px\"\n    }\n};\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        // 更新 state 使下一次渲染能够显示降级后的 UI\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.hasError) {\n            // 你可以自定义降级后的 UI 并渲染\n            return (\n                <>\n                    <h1 className={classes.h1}>:(</h1>\n                    <h2 className={classes.h2}>\n                        页面渲染出现错误，请尝试刷新此页面。\n                    </h2>\n                    {this.state.error &&\n                        this.state.errorInfo &&\n                        this.state.errorInfo.componentStack && (\n                            <details>\n                                <summary>错误详情</summary>\n                                <pre>\n                                    <code>{this.state.error.toString()}</code>\n                                </pre>\n                                <pre>\n                                    <code>\n                                        {this.state.errorInfo.componentStack}\n                                    </code>\n                                </pre>\n                            </details>\n                        )}\n                </>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default withStyles(styles)(ErrorBoundary);\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nif (window.location.hash !== \"\") {\n    window.location.href = window.location.hash.split(\"#\")[1];\n}\n\nserviceWorker.register();\n\nlet reduxEnhance = applyMiddleware(thunk);\nif (\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\n}\nconst store = createStore(cloureveApp, reduxEnhance);\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <ErrorBoundary>\n        <Provider store={store}>\n            <Router>\n                <Switch>\n                    <Route path=\"/admin\">\n                        <Suspense fallback={\"Loading...\"}>\n                            <Admin />\n                        </Suspense>\n                    </Route>\n                    <Route exact path=\"\">\n                        <App />\n                    </Route>\n                </Switch>\n            </Router>\n        </Provider>\n    </ErrorBoundary>,\n    document.getElementById(\"root\")\n);\n","import {\n    combineReducers as combine,\n    ReducersMapObject,\n    AnyAction\n} from \"redux\";\nimport invariant from \"invariant\";\n\nexport const combineReducers = (reducers: ReducersMapObject) => {\n    const combinedReducer = combine(reducers);\n    // TODO: define state type\n    return (state: any, action: AnyAction) => {\n        if (\n            action.type &&\n            !action.type.startsWith(\"@@\") &&\n            action.type.split(\"/\").length > 1\n        ) {\n            const namespace = action.type.split(\"/\")[0];\n            const reducer = reducers[namespace];\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\n            return reducer && reducer(state, action);\n        }\n        return combinedReducer(state, action);\n    };\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nexport interface ActionSetSubtitle extends AnyAction {\n    type: \"SET_SUBTITLE\";\n    title: string;\n}\n\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\n    return {\n        type: \"SET_SUBTITLE\",\n        title\n    };\n};\n\nexport const changeSubTitle = (\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const state = getState();\n        document.title =\n            title === null || title === undefined\n                ? state.siteConfig.title\n                : title + \" - \" + state.siteConfig.title;\n        dispatch(setSubtitle(title));\n    };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { toggleSnackbar } from \"../../actions/index\";\n\nimport {\n    MenuList,\n    MenuItem,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    withStyles,\n    ListItemSecondaryAction\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\n\nconst mapStateToProps = state => {\n    return {\n        keywords: state.explorer.keywords\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nconst styles = theme => ({\n    iconWhite: {\n        color: theme.palette.common.white\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main + \"!important\",\n        \"& $primary, & $icon\": {\n            color: theme.palette.common.white\n        }\n    },\n    primary: {},\n    icon: {},\n    buttonIcon: {},\n    selector: {\n        minWidth: \"300px\"\n    },\n    container: {\n        maxHeight: \"330px\",\n        overflowY: \" auto\"\n    }\n});\n\nclass PathSelectorCompoment extends Component {\n    state = {\n        presentPath: \"/\",\n        dirList: [],\n        selectedTarget: null\n    };\n\n    componentDidMount = () => {\n        const toBeLoad = this.props.presentPath;\n        this.enterFolder(this.props.keywords === \"\" ? toBeLoad : \"/\");\n    };\n\n    back = () => {\n        const paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        const toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\n    };\n\n    enterFolder = toBeLoad => {\n        API.get(\n            (this.props.api ? this.props.api : \"/directory\") +\n                encodeURIComponent(toBeLoad)\n        )\n            .then(response => {\n                const dirList = response.data.objects.filter(x => {\n                    return (\n                        x.type === \"dir\" &&\n                        this.props.selected.findIndex(value => {\n                            return (\n                                value.name === x.name && value.path === x.path\n                            );\n                        }) === -1\n                    );\n                });\n                if (toBeLoad === \"/\") {\n                    dirList.unshift({ name: \"/\", path: \"\" });\n                }\n                this.setState({\n                    presentPath: toBeLoad,\n                    dirList: dirList,\n                    selectedTarget: null\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            });\n    };\n\n    handleSelect = index => {\n        this.setState({ selectedTarget: index });\n        this.props.onSelect(this.state.dirList[index]);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.container}>\n                <MenuList className={classes.selector}>\n                    {this.state.presentPath !== \"/\" && (\n                        <MenuItem onClick={this.back}>\n                            <ListItemIcon>\n                                <UpIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"返回上一层\" />\n                        </MenuItem>\n                    )}\n                    {this.state.dirList.map((value, index) => (\n                        <MenuItem\n                            classes={{\n                                selected: classes.selected\n                            }}\n                            key={index}\n                            selected={this.state.selectedTarget === index}\n                            onClick={() => this.handleSelect(index)}\n                        >\n                            <ListItemIcon className={classes.icon}>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                classes={{ primary: classes.primary }}\n                                primary={value.name}\n                            />\n                            {value.name !== \"/\" && (\n                                <ListItemSecondaryAction\n                                    className={classes.buttonIcon}\n                                >\n                                    <IconButton\n                                        className={classNames({\n                                            [classes.iconWhite]:\n                                                this.state.selectedTarget ===\n                                                index\n                                        })}\n                                        onClick={() =>\n                                            this.enterFolder(\n                                                value.path === \"/\"\n                                                    ? value.path + value.name\n                                                    : value.path +\n                                                          \"/\" +\n                                                          value.name\n                                            )\n                                        }\n                                    >\n                                        <RightIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            )}\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath: PropTypes.string.isRequired,\n    selected: PropTypes.array.isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(PathSelectorCompoment));\n","import axios from \"axios\";\nimport Auth from \"./Auth\";\n\nexport const baseURL = \"/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n    crossDomain: true\n});\n\n\nfunction AppError(message, code, error) {\n    this.code = code;\n    this.message = message || \"未知错误\";\n    this.message += error ? \" \" + error : \"\";\n    this.stack = new Error().stack;\n}\nAppError.prototype = Object.create(Error.prototype);\nAppError.prototype.constructor = AppError;\n\ninstance.interceptors.response.use(\n    function(response) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // 登录过期\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href = \"/login\";\n            }\n\n            // 非管理员\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/home\";\n            }\n            throw new AppError(\n                response.rawData.msg,\n                response.rawData.code,\n                response.rawData.error\n            );\n        }\n        return response;\n    },\n    function(error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n"],"sourceRoot":""}